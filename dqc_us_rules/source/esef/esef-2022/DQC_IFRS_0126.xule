/**
DQC Rules
 (c) Copyright 2017 - 2023, XBRL US Inc. All rights reserved.
 See https://xbrl.us/dqc-license for license information.
 See https://xbrl.us/dqc-patent for patent infringement notice.
Taxonomy: IFRS 2022
Release Version 17
**/

rule-name-prefix DQR

ASSERT IFRS.0126.9595 SATISFIED

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];
/**  Get the latest Report Period**/
$document_period_facts = list({covered @concept.local-name in list('NameOfReportingEntityOrOtherMeansOfIdentification','LegalFormOfEntity','DomicileOfEntity','CountryOfIncorporation','AddressOfRegisteredOfficeOfEntity','PeriodCoveredByFinancialStatements','DescriptionOfPresentationCurrency','DateOfEndOfReportingPeriod2013')});

/** Get tables for financial statement items **/
$presNetworks = FILTER taxonomy().networks(parent-child) where ($item.concept-names.contains(StatementOfFinancialPositionAbstract) or $item.concept-names.contains(IncomeStatementAbstract)  or $item.concept-names.contains(StatementOfCashFlowsAbstract))
and (not $item.role.uri.lower-case.contains('parenthetical'))
and (not $item.role.description.lower-case.contains('parenthetical')) 
and (not $item.role.uri.lower-case.contains('equity'))
and (not $item.role.description.lower-case.contains('equity')) 
and (not $item.role.uri.lower-case.contains('deficit'))
and (not $item.role.description.lower-case.contains('deficit')) 
and (not $item.role.uri.lower-case.contains('stockholders')) 
and (not $item.role.description.lower-case.contains('stockholders')) 
and (not $item.role.uri.lower-case.contains('capital')) 
and (not $item.role.description.lower-case.contains('capital')) 
and (not $item.role.uri.lower-case.contains('investment')) 
and (not $item.role.description.lower-case.contains('investment')) 
and (not $item.role.uri.lower-case.contains('changes')) 
and (not $item.role.description.lower-case.contains('changes')) 
and (not $item.role.uri.lower-case.contains('shareholder')) 
and (not $item.role.description.lower-case.contains('shareholder')) 
and (not $item.role.uri.lower-case.contains('convertible')) 
and (not $item.role.description.lower-case.contains('convertible')) 
and (not $item.role.uri.lower-case.contains('preferred'))  
and (not $item.role.description.lower-case.contains('preferred'))  
and (not $item.role.uri.lower-case.contains('temporaryequity')) 
and (not $item.role.description.lower-case.contains('temporaryequity')) 
and (not $item.role.uri.lower-case.contains('redeemable'))
and (not $item.role.description.lower-case.contains('redeemable'))
and (not $item.role.uri.lower-case.contains('netproceedsfromallsources'))
and (not $item.role.description.lower-case.contains('netproceedsfromallsources'))
and (not $item.role.uri.lower-case.contains('membersinterest'))
and (not $item.role.description.lower-case.contains('membersinterest'))
and (not $item.role.uri.lower-case.contains('notes'))
and (not $item.role.description.lower-case.contains('notes'))
and (not $item.role.uri.lower-case.contains('highlights'));


$statementCubes = FILTER taxonomy().cubes where ($item.primary-concepts.name.contains(StatementOfFinancialPositionAbstract) or $item.primary-concepts.name.contains(IncomeStatementAbstract)  or $item.primary-concepts.name.contains(StatementOfCashFlowsAbstract));

$cubeURISet = (FILTER $statementCubes returns $item.drs-role.uri).to-set;

$document_period = first($document_period_facts);

for $presNetwork in $presNetworks.sort

         /** Don't run the rule if it is in a table as this is handled by rule 118**/
         if $presNetwork.role.uri in $cubeURISet or $document_period_facts.length < 1
            skip
         else 
			$document_period_end_date = $document_period.period.end - time-span("P1D");
			$document_period_start_date = $document_period.period.start;
			/** get the calculations aligned with the pres role.  We assume that the same role is used for the cube and the dimension**/
			$calcNetworkSource = navigate summation-item descendants include start role $presNetwork.role.uri returns set (source-name);

			for $concept_item in $calcNetworkSource
				if $concept_item == none
					skip
				else
				
					/** Determine the children of the concept to check **/
					$calcComponents = navigate summation-item children from $concept_item role $presNetwork.role.uri returns  (target-name, weight);
					/** Work out the decimals used in the financial statements **/
					$fs_fact_values_decimals = filter (list([nonils covered @concept in $calcNetworkSource])) returns $item.decimals;
					$fs_decimals = most_frequent($fs_fact_values_decimals)
					/** Sum the children to get a total. If the child has no value in the default then check if it has values using the dimension being processed. If it does the function takes the members of the dimension and adds them up.  This way if the components of a calc are dimensionalized with no default we will calculate the total.**/	
						
					$addend = sum(list(for $x in $calcComponents
											$targetElement = $x[1];
											$targetWeight = $x[2];
											first-value([nonils @concept = $targetElement where $fact.decimals == $fs_decimals] * $targetWeight, first(list([nonils @concept = $targetElement where $fact.decimals >= $fs_decimals])) * $targetWeight, first(list([nonils @concept = $targetElement where $fact.decimals < $fs_decimals])) * $targetWeight)
									)
									);
					
					/** Capture in a string what calc was performed  above to report in the rule message. **/
					$addend_string = sum(list(for $x in $calcComponents.sort
													$targetElement = $x[1];
													
													$factAmt = first-value([nonils @concept = $targetElement where $fact.decimals == $fs_decimals],first(list([nonils @concept = $targetElement where $fact.decimals >= $fs_decimals])), first(list([nonils @concept = $targetElement where $fact.decimals < $fs_decimals]))).string

													$factDecimals = first-value([nonils @concept = $targetElement where $fact.decimals == $fs_decimals].decimals, [nonils @concept = $targetElement].decimals);
													$weight =  if $x[2] == 1
																		"+"
																else
																		"-";
													$strLength = $targetElement.local-name.string.length;
													$pad = sum(list(for $x in range(120 - $strLength - $factAmt.length)
																					" " 
																					)
																			);
											"" + $weight + "  \t" + $targetElement.local-name.string  + $pad + $factAmt  +  (if $factDecimals != $fs_decimals " (Incorrect decimals: " +  $factDecimals.string + " )" else skip)  + "\n"
													)
									);

					/** Compare the addends to the sum.  This is only done for the current reporting period. This is to prevent bleed though from incomplete periods, and we know the current period should always be complete.**/
					
					$sum2 = if (taxonomy().concept($concept_item).period-type == duration)

								$durationValue = [nonils @concept = $concept_item @@period.end = $document_period_end_date @@period.start = $document_period_start_date where $fact.decimals == $fs_decimals]
									$durationValue
							else
								[nonils @concept = $concept_item @@period.end = $document_period_end_date where $fact.decimals == $fs_decimals];
					
					if $addend == none
						skip 
					else
						tolerance_for_decimals_comp($sum2, $addend, $sum2.decimals, 2)

message
"The statement {$presNetwork.role.description} includes an inconsistent calculation. The value of the concept {$concept_item} of {$sum2}  should be equal to the sum of its child components defined in the calculation linkbase. The sum of these child components is {$addend}. The values of the addends is determined by adding the values of the child concepts with a decimal value of {$fs_decimals.string}. All values in the financial statements should use the same decimal value. The values reported in the financial statement in the current reporting period of {$sum2.period} should be complete if the financial statement is to be mathematically accurate and complete. The components of {$concept_item} that should add to {$sum2} are comprised of the following:

{$addend_string}

The addends are calculated based on the calculation linkbase defined for {$presNetwork.role.description}. If addends are missing then the calculation tree should be amended. The rule will not add dimension components as the financial statement does not include a table. If dimensions are used on the statement then add a table to ensure that the dimensions are defined correctly. 


Total Element : {$concept_item}
Total Value : {$sum2} 
Total period : {$sum2.period} 
Dimensions : {$sum2.dimensions.join(', ','=')}
Decimals : {$sum2.decimals} 
Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}"


severity error
effectiveDate $effective_dates[$rule_id]

rule-focus $sum2