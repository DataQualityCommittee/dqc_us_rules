/**
DQC Rules
 (c) Copyright 2017 - 2023, XBRL US Inc. All rights reserved.
 See https://xbrl.us/dqc-license for license information.
 See https://xbrl.us/dqc-patent for patent infringement notice.
Taxonomy: IFRS 2021
Release Version 17
**/

rule-name-prefix DQR

ASSERT IFRS.0127.9596 SATISFIED

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];
/**  Get the latest Report Period**/
$document_period_facts = list({covered @concept.local-name in list('NameOfReportingEntityOrOtherMeansOfIdentification','LegalFormOfEntity','DomicileOfEntity','CountryOfIncorporation','AddressOfRegisteredOfficeOfEntity','PeriodCoveredByFinancialStatements','DescriptionOfPresentationCurrency','DateOfEndOfReportingPeriod2013')});

if $document_period_facts.length < 1
	skip
else
$document_period = first($document_period_facts)
$document_period_end_date = $document_period.period.end - time-span("P1D");
$document_period_start_date = $document_period.period.start;

/** Get tables for financial statement items **/

$presNetworks = FILTER taxonomy().networks(parent-child) where ($item.concept-names.contains(StatementOfFinancialPositionAbstract) or $item.concept-names.contains(IncomeStatementAbstract)  or $item.concept-names.contains(StatementOfCashFlowsAbstract))
and (not $item.role.uri.lower-case.contains('parenthetical'))
and (not $item.role.description.lower-case.contains('parenthetical')) 
and (not $item.role.uri.lower-case.contains('equity'))
and (not $item.role.description.lower-case.contains('equity')) 
and (not $item.role.uri.lower-case.contains('deficit'))
and (not $item.role.description.lower-case.contains('deficit')) 
and (not $item.role.uri.lower-case.contains('stockholders')) 
and (not $item.role.description.lower-case.contains('stockholders')) 
and (not $item.role.uri.lower-case.contains('capital')) 
and (not $item.role.description.lower-case.contains('capital')) 
and (not $item.role.uri.lower-case.contains('investment')) 
and (not $item.role.description.lower-case.contains('investment')) 
and (not $item.role.uri.lower-case.contains('changes')) 
and (not $item.role.description.lower-case.contains('changes')) 
and (not $item.role.uri.lower-case.contains('shareholder')) 
and (not $item.role.description.lower-case.contains('shareholder')) 
and (not $item.role.uri.lower-case.contains('convertible')) 
and (not $item.role.description.lower-case.contains('convertible')) 
and (not $item.role.uri.lower-case.contains('preferred'))  
and (not $item.role.description.lower-case.contains('preferred'))  
and (not $item.role.uri.lower-case.contains('temporaryequity')) 
and (not $item.role.description.lower-case.contains('temporaryequity')) 
and (not $item.role.uri.lower-case.contains('redeemable'))
and (not $item.role.description.lower-case.contains('redeemable'))
and (not $item.role.uri.lower-case.contains('netproceedsfromallsources'))
and (not $item.role.description.lower-case.contains('netproceedsfromallsources'))
and (not $item.role.uri.lower-case.contains('membersinterest'))
and (not $item.role.description.lower-case.contains('membersinterest'))
and (not $item.role.uri.lower-case.contains('notes'))
and (not $item.role.description.lower-case.contains('notes'))
and (not $item.role.uri.lower-case.contains('highlights'));

$statementCubes = FILTER taxonomy().cubes;

$cubeURISet = (FILTER $statementCubes returns $item.drs-role.uri).to-set;

for $presNetwork in $presNetworks.sort

/** get the presentation items aligned with the pres role.  We assume that the same role is used for the cube and the dimension**/
			
        $presItems = navigate parent-child descendants  role $presNetwork.role.uri where $relationship.target.is-monetary == true returns set (target-name)
         /** This rule applies where no table is used. **/
         if $presNetwork.role.uri in $cubeURISet
            skip
         else 

			for $concept_item in $presItems
				if $concept_item == none
					skip
				else
				
					/** Determine if each concept has a default value **/

                    $defaultValueCount = if taxonomy().concept($concept_item).period-type == duration
								list([nildefault @concept = $concept_item @@period.end = $document_period_end_date @@period.start = $document_period_start_date @unit=*]).length
							else
								list([nildefault @concept = $concept_item @@period.end = $document_period_end_date @unit=*]).length
                    

                    /** Determine if each concept has a dimension value **/
                    $dimensionValues = if taxonomy().concept($concept_item).period-type == duration
								list({nonils covered-dims @concept = $concept_item @@period.end = $document_period_end_date @@period.start = $document_period_start_date @unit=* where $fact.concept.is-numeric})
							else
								list({nonils covered-dims @concept = $concept_item @@period.end = $document_period_end_date @unit=* where $fact.concept.is-numeric})
                    
                    $dimensionValueCount = $dimensionValues.length
                    
                    /** If there is no default value and if there is a dimension item then flag an error **/

                    if $defaultValueCount == 0 and $dimensionValueCount > 0 and sum($dimensionValues) != 0
                        
                        //ADD THAT FACTS WITH UNCONSOLIDATED ENTITIES BECAUSE THEY ARE UNRELATED AS SHOULD EQUITY METHOD
                        $legalEntityAxisUsed = all(filter $dimensionValues returns $item.dimensions().keys.name.local-name.contains('UnconsolidatedSubsidiariesAxis'));

                        if ($legalEntityAxisUsed)
                            false
                        else 
                            true
                    else
                        false

message
"The statement {$presNetwork.role.description} includes the concept {$concept_item} in the presentation tree. The filing does not include a dimensional structure for this statement.  The filing  does not include a  default value for this presentation item {$concept_item} but does include dimensionalized values for this element of the following:

{$dimensionValues.sort.join(',   ')}

If the dimensionalized value appears in the financial statements, then a dimension needs to be added to the report. If the item has no value on the financial statements, then the presentation item should be removed from the financial statements.

Total Element : {$concept_item}
Total period : {first($dimensionValues.sort).period} 
Dimensions : {first($dimensionValues.sort).dimensions.join(', ','=')}

Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}"


severity error
effectiveDate $effective_dates[$rule_id]

rule-focus taxonomy().concept($concept_item)

ASSERT IFRS.0127.9597 SATISFIED

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];
/**  Get the latest Report Period**/
$document_period_facts = list({covered @concept.local-name in list('NameOfReportingEntityOrOtherMeansOfIdentification','LegalFormOfEntity','DomicileOfEntity','CountryOfIncorporation','AddressOfRegisteredOfficeOfEntity','PeriodCoveredByFinancialStatements','DescriptionOfPresentationCurrency','DateOfEndOfReportingPeriod2013')});

if $document_period_facts.length < 1
	skip
else
$document_period = first($document_period_facts)
$document_period_end_date = $document_period.period.end - time-span("P1D");
$document_period_start_date = $document_period.period.start;

/** Get tables for financial statement items **/
$presNetworks = FILTER taxonomy().networks(parent-child) where ($item.concept-names.contains(StatementOfFinancialPositionAbstract) or $item.concept-names.contains(IncomeStatementAbstract)  or $item.concept-names.contains(StatementOfCashFlowsAbstract))
and (not $item.role.uri.lower-case.contains('parenthetical'))
and (not $item.role.description.lower-case.contains('parenthetical')) 
and (not $item.role.uri.lower-case.contains('equity'))
and (not $item.role.description.lower-case.contains('equity')) 
and (not $item.role.uri.lower-case.contains('deficit'))
and (not $item.role.description.lower-case.contains('deficit')) 
and (not $item.role.uri.lower-case.contains('stockholders')) 
and (not $item.role.description.lower-case.contains('stockholders')) 
and (not $item.role.uri.lower-case.contains('capital')) 
and (not $item.role.description.lower-case.contains('capital')) 
and (not $item.role.uri.lower-case.contains('investment')) 
and (not $item.role.description.lower-case.contains('investment')) 
and (not $item.role.uri.lower-case.contains('changes')) 
and (not $item.role.description.lower-case.contains('changes')) 
and (not $item.role.uri.lower-case.contains('shareholder')) 
and (not $item.role.description.lower-case.contains('shareholder')) 
and (not $item.role.uri.lower-case.contains('convertible')) 
and (not $item.role.description.lower-case.contains('convertible')) 
and (not $item.role.uri.lower-case.contains('preferred'))  
and (not $item.role.description.lower-case.contains('preferred'))  
and (not $item.role.uri.lower-case.contains('temporaryequity')) 
and (not $item.role.description.lower-case.contains('temporaryequity')) 
and (not $item.role.uri.lower-case.contains('redeemable'))
and (not $item.role.description.lower-case.contains('redeemable'))
and (not $item.role.uri.lower-case.contains('netproceedsfromallsources'))
and (not $item.role.description.lower-case.contains('netproceedsfromallsources'))
and (not $item.role.uri.lower-case.contains('membersinterest'))
and (not $item.role.description.lower-case.contains('membersinterest'))
and (not $item.role.uri.lower-case.contains('notes'))
and (not $item.role.description.lower-case.contains('notes'))
and (not $item.role.uri.lower-case.contains('highlights'));

$statementCubes = FILTER taxonomy().cubes where ($item.primary-concepts.name.contains(StatementOfFinancialPositionAbstract) or $item.primary-concepts.name.contains(IncomeStatementAbstract)  or $item.primary-concepts.name.contains(StatementOfCashFlowsAbstract));

$cubeURISet = (FILTER $statementCubes returns $item.drs-role.uri).to-set;

for $presNetwork in $presNetworks.sort

/** get the presentation items aligned with the pres role.  We assume that the same role is used for the cube and the dimension**/
			
        $presItems = navigate parent-child descendants  role $presNetwork.role.uri where $relationship.target.is-monetary == true returns set (target-name)
         /** If use a table check that facts have the correct member **/
         if $presNetwork.role.uri in $cubeURISet
            $bs_cube = filter $statementCubes where $item.drs-role.uri == $presNetwork.role.uri
            $bs_cube_facts = sum($bs_cube.facts)

        for $concept_item in $presItems

            $dimensionValues = if taxonomy().concept($concept_item).period-type == duration
								list({covered-dims @concept = $concept_item @@period.end = $document_period_end_date @@period.start = $document_period_start_date @unit=*})
							else
								list({covered-dims @concept = $concept_item @@period.end = $document_period_end_date @unit=*})

            if $dimensionValues.length == 0 or sum($dimensionValues) == 0
                skip
            else
                $set_of_concept_facts_included_in_bs = filter $bs_cube_facts where $item.concept.name in $dimensionValues.concept.name;

                $is_concept_in_table = filter sum($bs_cube.primary-concepts) where $item.name == $concept_item

                //ADD THAT FACTS WITH UNCONSOLIDATED ENTITIES ARE EXCLUDED
                    $legalEntityAxisUsed = all(filter $dimensionValues returns $item.dimensions().keys.name.local-name.contains('UnconsolidatedSubsidiariesAxis'));

                if $set_of_concept_facts_included_in_bs.length == 0 and not $legalEntityAxisUsed
                    true
                else
                    false
         else 
			skip

message
"The statement {$presNetwork.role.description} includes the concept {$concept_item} in the presentation tree. The filing uses an XBRL table called {first($bs_cube.cube-concept())} to represent this statement. The table includes the dimensions {(for $d in $bs_cube.dimensions $d.concept.name).sort.join(", ")}.  The statement presentation group {$presNetwork.role.description} includes a presentation concept called {$concept_item}. This concept  has the following values associated with it that do not appear in the financial statement table  {first($bs_cube.cube-concept())}:

{(list(for $d in $dimensionValues list($d.concept.name, $d).join(' = ')).sort).to-set.join(' \n')}

The presentation concept is defined for the statement but no fact values are defined in the instance document that use this line item in the table {first($bs_cube.cube-concept())}. If the concept appears in the financial statements table, then either a dimension or line item needs to be added to the structure of the definition linkbase that defines the statement. If the item is not represented on the financial statements, then the presentation item should be removed.
{if $is_concept_in_table.length == 0 '
In this case the concept ' + $concept_item.local-name + ' is missing from the definition linkbase table nd should be added.' else ''}

Total Element : {$concept_item}
Total period : {first($dimensionValues.sort).period} 
Dimensions : {first($dimensionValues.sort).dimensions.join(', ','=')}

Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}"


severity error
effectiveDate $effective_dates[$rule_id]

rule-focus taxonomy().concept($concept_item)
