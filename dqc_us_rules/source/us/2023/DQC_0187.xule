/**
DQC Rules
 (c) Copyright 2017 - 2025, XBRL US Inc. All rights reserved.
 See https://xbrl.us/dqc-license for license information.
 See https://xbrl.us/dqc-patent for patent infringement notice.
Taxonomy: US GAAP All

WARNING : THIS IS A SINGLE FILE ON CHANGE TO THIS AFFECTS 5 files 2024, 2023, 2022, 2021, 2020
This was created using a hardlink ln {original} {new}
**/

RULE-NAME-PREFIX DQC

/** Check PPEGross is calculated correctly **/
ASSERT US.0187.10173 satisfied
$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

/** Need to run on cube where the axis is PropertyPlantAndEquipmentByTypeAxis and has line item PropertyPlantAndEquipmentGross**/

/** Find the Cube **/

$PPE-Cubes = FILTER taxonomy().cubes  where $item.primary-concepts.name.contains(PropertyPlantAndEquipmentGross) and $item.dimensions.concept.name.contains(PropertyPlantAndEquipmentByTypeAxis)

for $cube in $PPE-Cubes
        $members = navigate dimensions descendants from PropertyPlantAndEquipmentByTypeAxis returns set target-name
        $domain = navigate dimensions dimension-domain descendants from PropertyPlantAndEquipmentByTypeAxis returns set target-name /*SHould only have one member*/

        $member_descendants = $members - $domain;

        $member_facts = list(for $member in $member_descendants
                                            $ancestors_list = (navigate dimensions domain-member ancestors from $member drs-role $cube.drs-role returns set (target-name)) - $domain;
                                            if list({nonils  @concept=PropertyPlantAndEquipmentGross @cube.drs-role = $cube.drs-role @PropertyPlantAndEquipmentByTypeAxis in $ancestors_list}).length > 0
                                                skip
                                            else 
                                                {nonils @concept=PropertyPlantAndEquipmentGross @cube.drs-role = $cube.drs-role @PropertyPlantAndEquipmentByTypeAxis = $member});

        $ppe_gross = {nonils @concept=PropertyPlantAndEquipmentGross};
        $ppe_Gross_dim_components = $member_facts;
        $ppe_Gross_dim_components_sum = sum($ppe_Gross_dim_components)
        if $ppe_Gross_dim_components_sum == none
            skip
        else
            $ppe_gross < $ppe_Gross_dim_components_sum

message
"The value of PropertyPlantAndEquipmentGross is reported as {$ppe_gross}. The dimensional breakdown of PropertyPlantAndEquipmentGross using the axis PropertyPlantAndEquipmentByTypeAxis aggregates to a total of {$ppe_Gross_dim_components_sum}.  This is more than the value of PropertyPlantAndEquipmentGross.

The dimensional values reported are as follows:
{$ppe_Gross_dim_components.join(', ')}

These values are reported in the role  {$cube.drs-role}.

Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}
"

severity error
rule-focus $ppe_gross
effectiveDate $effective_dates[$rule_id]


assert US.0187.10174 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

$children_of_netPPE = navigate summation-item children from PropertyPlantAndEquipmentNet returns set target-name;

$reconciling_items_other_than_depr = $children_of_netPPE - set(AccumulatedDepreciationDepletionAndAmortizationPropertyPlantAndEquipment, PropertyPlantAndEquipmentGross)

$decimal_tolerance_factor = if $reconciling_items_other_than_depr.length > 0 and $children_of_netPPE.contains(PropertyPlantAndEquipmentGross)
                            $value_of_DR_reconciling_items = first-value(sum(list({nonils @concept in $reconciling_items_other_than_depr where $fact.concept.balance == debit})),0);
                            $value_of_CR_reconciling_items = first-value(sum(list({nonils @concept in $reconciling_items_other_than_depr where $fact.concept.balance == credit})),0);
                            $value_ext = sum(list({ @concept in $reconciling_items_other_than_depr}))
                            $difference = $value_of_DR_reconciling_items - $value_of_CR_reconciling_items

                            $difference.abs + 2
                            
                        else
                            2

$base = {nonils @PropertyPlantAndEquipmentGross};
$agg = {nonils @PropertyPlantAndEquipmentNet}#a1 <+> {nonils @AccumulatedDepreciationDepletionAndAmortizationPropertyPlantAndEquipment}#a2;

tolerance_for_decimals($base, $agg, $decimal_tolerance_factor)

message

"{$base.concept.label.text} with a value of {$base} is not equal to the combined total of {$a1.concept.label.text} and {$a2.concept.label.text} ( {$a1} + {$a2} ) with a value of {$agg}. 
These values should be equal.

The properties of this {$base.concept} fact are:
Period :{$base.period}
Dimensions :  {$base.dimensions.join(', ','=')}
Unit : {$base.unit}
Decimals of {$base.concept.label.text} : {$base.decimals}
Decimals of {$a1.concept.label.text} : {$a1.decimals}
Decimals of {$a2.concept.label.text} : {$a2.decimals}

Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}"

severity error

effectiveDate $effective_dates[$rule_id]

assert US.0187.10175 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

$base = {nonils @PropertyPlantAndEquipmentAndFinanceLeaseRightOfUseAssetBeforeAccumulatedDepreciationAndAmortization};
$agg = {nonils @PropertyPlantAndEquipmentAndFinanceLeaseRightOfUseAssetAfterAccumulatedDepreciationAndAmortization}#a1 <+> {nonils @PropertyPlantAndEquipmentAndFinanceLeaseRightOfUseAssetAccumulatedDepreciationAndAmortization}#a2;
$decimal_tolerance_factor = 2;

tolerance_for_decimals($base, $agg, $decimal_tolerance_factor)

message

"{$base.concept.label.text} with a value of {$base} is not equal to the combined total of {$a1.concept.label.text} and {$a2.concept.label.text} ( {$a1} + {$a2} ) with a value of {$agg}. 

These values should be equal.
The properties of this {$base.concept} fact are:
Period :{$base.period}
Dimensions :  {$base.dimensions.join(', ','=')}
Unit : {$base.unit}
Decimals of {$base.concept.label.text} : {$base.decimals}
Decimals of {$a1.concept.label.text} : {$a1.decimals}
Decimals of {$a2.concept.label.text} : {$a2.decimals}

Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}"

severity error

effectiveDate $effective_dates[$rule_id]


/** Check PPEGross is calculated correctly **/
ASSERT US.0187.10176 satisfied
$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

$ppe_gross = {nonils @concept=PropertyPlantAndEquipmentGross};
$ppe_Gross_dim_components = list({nonils @concept=PropertyPlantAndEquipmentGross @PublicUtilityAxis=*});
$ppe_Gross_dim_components_sum = sum($ppe_Gross_dim_components)
if $ppe_Gross_dim_components_sum == none
    skip
else
    $ppe_gross < $ppe_Gross_dim_components_sum

message
"The value of PropertyPlantAndEquipmentGross is reported as {$ppe_gross}. The dimensional breakdown of PropertyPlantAndEquipmentGross using the axis PublicUtilityAxis aggregates to a total of {$ppe_Gross_dim_components_sum}.  This is more than the value of PropertyPlantAndEquipmentGross.

The dimensional values reported are as follows:
{$ppe_Gross_dim_components.join(', ')}

Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}
"

severity error
rule-focus $ppe_gross
effectiveDate $effective_dates[$rule_id]

ASSERT US.0187.10179 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

$net = {nonils @MineralPropertiesNet};
$gross = {nonils @MineralPropertiesGross}#a1 + {nonils @MineralRights}#a2;
$decimal_tolerance_factor = 2;

$gross < $net

message

"{$net.concept.label.text} with a value of {$net} is greater than the combined total of {$a1.concept.label.text} and {$a2.concept.label.text} ( {$a1} + {$a2} ) with a value of {$gross}. 

These values should be equal.
The properties of this {$net.concept} fact are:
Period :{$net.period}
Dimensions :  {$net.dimensions.join(', ','=')}
Unit : {$net.unit}
Decimals of {$net.concept.label.text} : {$net.decimals}


Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}"

severity error

effectiveDate $effective_dates[$rule_id]