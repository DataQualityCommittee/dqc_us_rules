/**
DQC Rules
 (c) Copyright 2017 - 2023, XBRL US Inc. All rights reserved.
 See https://xbrl.us/dqc-license for license information.
 See https://xbrl.us/dqc-patent for patent infringement notice.
Taxonomy: US GAAP 2023
**/

rule-name-prefix DQC

ASSERT US.0150.9876 SATISFIED

/** RULE LOGIC Consolidation Items Axis
1. Identify the segment diclosure cube.
2. Only use cubes using the ConsolidationItemsAxis
3. Get Monetary items in the cube
4. Get the decimals used
5. For each line item in the cube sum the values of the values using the Consolidation Items Axis
6. Check if the value of the dimensions is greater than the total.
7. If there is no value for the total or the components then the rule willk not run.
**/

$ruleId = (rule-name().split('.'))[rule-name().split('.').length];
/**  This rule looks at facts on the segment and Consolidated Items  dimensions and makes sure that they add across to the default in a segment cube.
t**/

for $segmentCube in $SEGMENT_DISCLOSURE_CUBES
                /** Get cubes with srt:ConsolidationItemsAxis **/
                $dimensions = $segmentCube.dimensions;
				$dimObjects = filter $dimensions returns $item.concept.name
                if $dimObjects.contains(srt:ConsolidationItemsAxis)
                    /**Identify all monetary primary concepts in Cubes with ConsolidationItemsAxis **/
                    $primaryConcepts = $segmentCube.primary-concepts
                    $monetaryConceptsInCube = filter $primaryConcepts where $item.is-monetary returns $item.name

                    for $concept in $monetaryConceptsInCube

						$factsToAdd = list([nonils @concept = $concept  @srt:ConsolidationItemsAxis = *]);

                        $addedDimensions = sum($factsToAdd)

                        /** Capture in a string what calc was performed  above to report in the rule message. **/
                       $addend_string = sum(filter $factsToAdd returns "Reported consolidated items member " + $item.dimensions.join(', ', '=') + " with a value of " + $item.string + '. ') ;


                        $dimensionTotal = [nonils @concept = $concept  @srt:ConsolidationItemsAxis = none]

                        if $addedDimensions == none or $dimensionTotal == none or $dimensionTotal <= 0 
                            skip
                        else
                        tolerance_for_decimals_greater_than($addedDimensions, $dimensionTotal, $dimensionTotal.decimals, 2)
                else
                    skip
              


message
"The disclosure {$segmentCube.drs-role.description} includes an inconsistent addition of a dimensional member. The value of the concept {$concept} represents the sum of consolidation item members with a total of {$dimensionTotal}. The value of the total should be greater than or equal to the sum of the values of the consolidated items with a value of {$addedDimensions}. The values for the component dimensions are as follows:

{$addend_string}

The addends are calculated based on the members on the consolidated items  linkbase defined for {$segmentCube.drs-role.description}. 

Total Element : {$concept}
Total Value : {$dimensionTotal} 
Total period : {$dimensionTotal.period} 
Dimensions : {$dimensionTotal.dimensions.join(', ','=')}
Decimals : {$dimensionTotal.decimals} 
Rule Element Id:{$ruleId}
Rule version: {$ruleVersion}"

SEVERITY error
effectiveDate $effective_dates[$ruleId]


ASSERT US.0150.9877 SATISFIED

/** RULE LOGIC Statement Business Segments Axis
1. Identify the segment diclosure cube.
2. Only use cubes using the StatementBusinessSegmentsAxis
3. Get Monetary items in the cube
4. Get the decimals used
5. For each line item in the cube sum the values of the values using the Statement Business Segments Axis
6. Check if the value of the dimensions is greater than the total.
7. If there is no value for the total or the components then the rule will not run.
**/

$ruleId = (rule-name().split('.'))[rule-name().split('.').length];

for $segmentCube in $SEGMENT_DISCLOSURE_CUBES
                /** Get cubes with StatementBusinessSegmentsAxis **/
                $dimensions = $segmentCube.dimensions;
				$dimObjects = filter $dimensions returns $item.concept.name
                if $dimObjects.contains(StatementBusinessSegmentsAxis)
                    /**Identify all monetary primary concepts in Cubes with StatementBusinessSegmentsAxis **/
                    $primaryConcepts = $segmentCube.primary-concepts
                    $monetaryConceptsInCube = filter $primaryConcepts where $item.is-monetary returns $item.name


                    for $concept in $monetaryConceptsInCube

                        $factsToAdd = list(
							[nonils @concept = $concept @cube.drs-role = $segmentCube.drs-role  @StatementBusinessSegmentsAxis = * ]
								);

						$addedDimensions = sum($factsToAdd)

                        /** Capture in a string what calc was performed  above to report in the rule message. **/
                        $addend_string = sum(filter $factsToAdd returns "Reported Segment member " + $item.dimensions.join(', ', '=') + " with a value of " + $item.string + '. ') ;

                        $dimensionTotal = [nonils @concept = $concept  @StatementBusinessSegmentsAxis = none]
                        if $addedDimensions == none or $dimensionTotal == none or $dimensionTotal <= 0
                            skip
                        else
                         tolerance_for_decimals_greater_than($addedDimensions, $dimensionTotal, $dimensionTotal.decimals, 2)
                else
                    skip
              


message
"The disclosure {$segmentCube.drs-role.description} includes an inconsistent addition of a dimensional member. The value of the concept {$concept} represents the sum of business segment members with a total of {$dimensionTotal}. The value of the total should be equal to the sum of the values of the business segments with a value of {$addedDimensions}. The values for the component dimensions are as follows:

{$addend_string}

The addends are calculated based on the the member on the StatementBusinessSegmentsAxis.


Total Element : {$concept}
Total Value : {$dimensionTotal} 
Total period : {$dimensionTotal.period} 
Dimensions : {$dimensionTotal.dimensions.join(', ','=')}
Decimals : {$dimensionTotal.decimals} 
Rule Element Id:{$ruleId}
Rule version: {$ruleVersion}"

SEVERITY error
effectiveDate $effective_dates[$ruleId]

/**DQC 0150.10200 **/
/** Determine if they have a reconcilaition in the 10-K for segment net income and if a calculation of the rec does not exist then report an error. This only works when they have reported a value with the ConsolidationItemsAxis in the segment table.  
**/

/** REMOVED RULE **/


/**DQC 0150.9878 **/
/** FIND WHERE OPERATING SEGMENT HAS NOT BEEN USED. 
Look at segment table and look where the consolidated items axis is used for a line item and the business segment has been used for the same item without the operating segment member.  
**/

ASSERT US.0150.9878 SATISFIED

$ruleId = (rule-name().split('.'))[rule-name().split('.').length];

for $segmentCube in $SEGMENT_DISCLOSURE_CUBES
                /** Get cubes with StatementBusinessSegmentsAxis **/
                $dimensions = $segmentCube.dimensions;
				$dimObjects = filter $dimensions returns $item.concept.name
                if $dimObjects.contains(StatementBusinessSegmentsAxis) and $dimObjects.contains(srt:ConsolidationItemsAxis)
                    /**Identify all monetary primary concepts in Cubes with StatementBusinessSegmentsAxis **/
                    $primaryConcepts = $segmentCube.primary-concepts
                    $monetaryConceptsInCube = filter $primaryConcepts where $item.is-monetary returns $item.name
                    
                    for $concept in $monetaryConceptsInCube
                        /** See if the concept has any value with the consolidated items axis and make sure the concept has no business segment associated with the concept. This means it is a reconciling item.**/
                        $reconcilingItems =  list({nonils @concept = $concept  @cube.drs-role = $segmentCube.drs-role @StatementBusinessSegmentsAxis = none @srt:ConsolidationItemsAxis != OperatingSegmentsMember}).sort
                        $operatingItems = list({nonils @concept = $concept  @cube.drs-role = $segmentCube.drs-role @StatementBusinessSegmentsAxis = *  @srt:ConsolidationItemsAxis = none}).sort
                        $reconcilingItems.length > 0 and $operatingItems.length > 0
                        
                else
                    skip


message
"The disclosure {$segmentCube.drs-role.description} includes the concept {$concept} with a value of {first($reconcilingItems)} and the dimension of  {first($reconcilingItems).dimensions.join(', ','=')}. This same line item however was used to report the value of {first($operatingItems)} for a busines segment axis with the dimensions of  {first($operatingItems).dimensions.join(', ','=')}, but with no associated operating member. If a value is reported for a segment then an operating member should be used if there are reconciling items for that line item.

Concept : {$concept}
Value : {first($operatingItems)} 
Total period : {first($operatingItems).period} 
Dimensions : {first($operatingItems).dimensions.join(', ','=')}
Decimals : {first($operatingItems).decimals} 

Rule Element Id:{$ruleId}
Rule version: {$ruleVersion}"

SEVERITY error
effectiveDate $effective_dates[$ruleId]


ASSERT US.0150.10076 SATISFIED

$ruleId = (rule-name().split('.'))[rule-name().split('.').length];

 $segmentMembers  = sum(set(for $segmentCube in $SEGMENT_DISCLOSURE_CUBES
                /** Get cubes with StatementBusinessSegmentsAxis **/
					navigate dimensions dimension-member descendants from StatementBusinessSegmentsAxis drs-role $segmentCube.drs-role returns set (target-name) - set(SegmentDomain)
 					))

if $segmentMembers.length > 0
	$NumberOfSegments = [@NumberOfReportableSegments]#NumberSegments
	if $segmentMembers.length < $NumberOfSegments
		true
	else
		false
		
else
	skip


message
"The filer uses the segment axis and has defined {$segmentMembers.length} segments in the filing. These include the following:
{$segmentMembers.join(", ")}. The filer has also used the element NumberOfReportableSegments to report {$NumberSegments}. The number of segments should not be greater than the segments reported with the axis.  Please update the number or add additional segment members to the axis.

Concept : {$NumberSegments.concept.name}
Value : {$NumberSegments} 
Total period : {$NumberSegments.period} 
Decimals : {$NumberSegments.decimals} 

Rule Element Id:{$ruleId}
Rule version: {$ruleVersion}"

SEVERITY error
effectiveDate $effective_dates[$ruleId]
