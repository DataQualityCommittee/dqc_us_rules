/**
DQC Rules
 (c) Copyright 2017 - 2022, XBRL US Inc. All rights reserved.
 See https://xbrl.us/dqc-license for license information.
 See https://xbrl.us/dqc-patent for patent infringement notice.
Taxonomy: US GAAP 2021
**/


rule-name-prefix DQC


assert US.0145.9867 satisfied

$ruleId = (rule-name().split('.'))[rule-name().split('.').length];

$NonFinancing = set(NetCashProvidedByUsedInInvestingActivitiesAbstract, NetCashProvidedByUsedInOperatingActivitiesAbstract, EffectOfExchangeRateOnCashCashEquivalentsRestrictedCashAndRestrictedCashEquivalentsIncludingDisposalGroupAndDiscontinuedOperationsAbstract);

$taxonomyItemsNotInExtensions = navigate parent-child descendants from $NonFinancing taxonomy $us-gaap  returns set (target-name) 

$extensionNames = navigate parent-child descendants from NetCashProvidedByUsedInFinancingActivitiesAbstract where $relationship.target.name in $taxonomyItemsNotInExtensions returns set (target-name)

for $invalidConcept in $extensionNames
	true

message
"The company has reported the concept {$invalidConcept} as a child of the presentation concept NetCashProvidedByUsedInFinancingActivitiesAbstract.  This concept is not a component of financing activities and should be presented outside of this group in the presentation linkbase.

Rule Element Id:{$ruleId}
Rule version: {$ruleVersion}"

severity error
effectiveDate $effective_dates[$ruleId]

rule-focus $invalidConcept.local-name

//-----------DQC.US.0145.9868 ---------------//
assert US.0145.9868 satisfied

$ruleId = (rule-name().split('.'))[rule-name().split('.').length];

$NonInvesting = set(NetCashProvidedByUsedInFinancingActivitiesAbstract, NetCashProvidedByUsedInOperatingActivitiesAbstract, EffectOfExchangeRateOnCashCashEquivalentsRestrictedCashAndRestrictedCashEquivalentsIncludingDisposalGroupAndDiscontinuedOperationsAbstract);

$taxonomyItemsNotInExtensions = navigate parent-child descendants from $NonInvesting taxonomy $us-gaap   returns set (target-name) 

$extensionNames = navigate parent-child descendants from NetCashProvidedByUsedInInvestingActivitiesAbstract where $relationship.target.name in $taxonomyItemsNotInExtensions returns set (target-name)

for $invalidConcept in $extensionNames
	true

message
"The company has reported the concept {$invalidConcept} as a child of the presentation concept NetCashProvidedByUsedInInvestingActivitiesAbstract.  This concept is not a component of investing activities and should be presented outside of this group in the presentation linkbase.

Rule Element Id:{$ruleId}
Rule version: {$ruleVersion}"

severity error
effectiveDate $effective_dates[$ruleId]

rule-focus $invalidConcept.local-name

//-----------DQC.US.0145.9869 ---------------//

assert US.0145.9869  satisfied
$ruleId = (rule-name().split('.'))[rule-name().split('.').length];

$taxonomyChangeInOperatingCapital = navigate parent-child descendants from IncreaseDecreaseInOperatingCapitalAbstract taxonomy $us-gaap returns set (target-name) 

$filinComponentsOfNetIncomeLoss = navigate parent-child descendants from IncomeStatementAbstract where $relationship.target.is-monetary == true returns set (target-name)

$misplacedConcepts = $filinComponentsOfNetIncomeLoss.intersect($taxonomyChangeInOperatingCapital)

for $invalidConcept in $misplacedConcepts
	true

message
"The company has reported the concept {$invalidConcept} as a child of the presentation concept IncomeStatementAbstract.  This concept is not a component the income statement and should not be presented within the income statement.

Rule Element Id:{$ruleId}
Rule version: {$ruleVersion}"

rule-focus $invalidConcept.local-name

assert US.0146.9870  satisfied
$ruleId = (rule-name().split('.'))[rule-name().split('.').length];

$document_period = first(list({covered @concept.local-name = 'DocumentPeriodEndDate'}));
$document_period_end_date = $document_period.period.end - time-span("P1D");
$document_period_start_date = $document_period.period.start

if  not set('10-K','10-KT','20-F').contains([covered @concept.local-name ='DocumentType'])
	skip
else
	$presNetworks = FILTER $PRES_NETWORKS where $item.role.description.contains('- Statement -') 
	and (not $item.role.uri.lower-case.contains('parenthetical')) 
	and (not $item.role.uri.lower-case.contains('equity')) 
	and (not $item.role.uri.lower-case.contains('deficit')) 
	and (not $item.role.uri.lower-case.contains('stockholders')) 
	and (not $item.role.uri.lower-case.contains('capital')) 
	and (not $item.role.uri.lower-case.contains('investment')) 
	and (not $item.role.uri.lower-case.contains('changes')) 
	and (not $item.role.uri.lower-case.contains('shareholder')) 
	and (not $item.role.uri.lower-case.contains('convertible')) 
	and (not $item.role.uri.lower-case.contains('preferred'))  
	and (not $item.role.uri.lower-case.contains('temporaryequity')) 
	and (not $item.role.uri.lower-case.contains('redeemable'))
	and (not $item.role.uri.lower-case.contains('netproceedsfromallsources'))
	and (not $item.role.uri.lower-case.contains('membersinterest'))
	and (not $item.role.uri.lower-case.contains('highlights'))
                        
	for $presNetwork in $presNetworks.sort
		
		$presConceptItems = $presNetwork.concept-names;

		// Income Statement Processing 
		if $presConceptItems.contains(IncomeStatementAbstract)
			$presNumericItems = filter $presConceptItems where taxonomy().concept($item).is-monetary and taxonomy().concept($item).period-type == duration;
			$periodDuration = duration($document_period_start_date, $document_period_end_date);
			$totalYearItems = list([covered @concept in $presNumericItems @period in list($periodDuration)]).count
			$totalNonYearItems = list([covered @concept in $presNumericItems @period.end = $document_period_end_date @period.start != $document_period_start_date])#facts.count
			$totalYearItems < $totalNonYearItems

		else 
			skip


message
"The company has reported a 10K but the majority of the values reported on the Income Statement are for a period other than a year.  Please check that the values used on the Income Statement represent a full year for the required reporting period.

Rule Element Id:{$ruleId}
Rule version: {$ruleVersion}"

rule-focus first($facts.sort)

severity error
effectiveDate $effective_dates[$ruleId]

assert US.0147.9871  satisfied
$ruleId = (rule-name().split('.'))[rule-name().split('.').length];

{nonils @concept in $non_neg_items.keys @srt:ConsolidationItemsAxis = srt:ConsolidationEliminationsMember where $fact != 0 and $fact.is-numeric and
		(not match_set_substring($fact, $exclude_non_neg_string_members)
		and (to-set($fact.dimensions-explicit.values.name) intersect $exclude_non_neg_members).length == 0
		and ($fact.dimensions.keys.name intersect $exclude_non_neg_axis).length == 0
		and not_elim_adjust($fact, $exclude_non_neg_axis_members))}#fact1.signum == {nonils @srt:ConsolidationItemsAxis = none where $fact.is-numeric and $fact != 0}#fact2.signum
message
	"The concept {$fact1.concept.name} with an elimination value of {$fact1} has a sign which is the same as the defaulted value for {$fact2.concept.name} of {$fact2}. It is expected that the defaulted value and eliminations for the line item {$fact1.concept.name}} would be the opposite of each other.
Review the elimination amount to determine that the sign is correct.

The properties of this {$fact1.concept.name} fact are:

Period :{$fact1.period}
Dimensions : {$fact1.dimensions.join(', ','=')}
Unit : {$fact1.unit}\n
id:14118
Rule version: {$ruleVersion}"

severity error
effectiveDate $effective_dates[$ruleId]

rule-focus $fact1
