/**
DQC Rules
 (c) Copyright 2017 - 2021, XBRL US Inc. All rights reserved.
 See https://xbrl.us/dqc-license for license information.
 See https://xbrl.us/dqc-patent for patent infringement notice.
Taxonomy: US GAAP 2019
Release Version 16
**/

RULE-NAME-PREFIX DQC

ASSERT US.0118.9575 SATISFIED

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];
/**  Get the latest Report Period**/
$document_period = first(list({covered @concept.local-name = 'DocumentPeriodEndDate'}));
$document_period_end_date = $document_period.period.end - time-span("P1D");
$document_period_start_date = $document_period.period.start

/** Get tables for financial statement items **/

$statementCubes = FILTER taxonomy().cubes where $item.drs-role.description.contains('- Statement -')
and (not $item.drs-role.uri.lower-case.contains('parenthetical')) 
and (not $item.drs-role.uri.lower-case.contains('equity')) 
and (not $item.drs-role.uri.lower-case.contains('deficit')) 
and (not $item.drs-role.uri.lower-case.contains('stockholders')) 
and (not $item.drs-role.uri.lower-case.contains('capital')) 
and (not $item.drs-role.uri.lower-case.contains('investment')) 
and (not $item.drs-role.uri.lower-case.contains('changes')) 
and (not $item.drs-role.uri.lower-case.contains('shareholder')) 
and (not $item.drs-role.uri.lower-case.contains('convertible')) 
and (not $item.drs-role.uri.lower-case.contains('preferred'))  
and (not $item.drs-role.uri.lower-case.contains('temporaryequity')) 
and (not $item.drs-role.uri.lower-case.contains('redeemable'))
and (not $item.drs-role.uri.lower-case.contains('netproceedsfromallsources'))
and (not $item.drs-role.uri.lower-case.contains('membersinterest'));

for $cube in $statementCubes.sort
			/** get the calculations aligned with the cube role.  We assume that the same role is used for the cube and the dimension**/
			$calcNetworkSource = navigate summation-item descendants include start role $cube.drs-role.uri returns set (source-name);
			
			$conceptsInCube = filter $cube.facts returns $item.concept.name;

			for $concept_item in $calcNetworkSource
				if $concept_item == none or (length($calcNetworkSource.intersect($conceptsInCube.to-set))==0)
					skip
				else
				
					/** Determine the children of the concept to check **/
					$calcComponents = navigate summation-item children from $concept_item role $cube.drs-role.uri returns  (target-name, weight);
					/** Sum the children to get a total. If the child has no value in the default then check if it has values using the dimension being processed. If it does the function takes the members of the dimension and adds them up.  This way if the components of a calc are dimensionalized with no default we will calculate the total.**/

					$addend = sum(list(for $x in $calcComponents
											$targetElement = $x[1];
											$targetWeight = $x[2];
											first-value({nonils @concept = $targetElement @cube.drs-role = $cube.drs-role} * $targetWeight, max(list(getDimensionSums($targetElement, $cube, $cube.drs-role))) * $targetWeight)	
									)
									);
					
					/** Capture in a string what calc was performed  above to report in the rule message. **/
					$addend_string = sum(list(for $x in $calcComponents.sort
													$targetElement = $x[1];
													$defaultFact = if exists({nonils @concept = $targetElement @cube.drs-role = $cube.drs-role})
																		true
																	else
																		false;

													$DimStringList = list(getDimensionNames($targetElement , $cube, $cube.drs-role))
													$DimString = filter $DimStringList returns $item[1].string + " Dim Facts: " + $item[3].join(' + ');
													$DimString2 = $DimString.join(' | ');
													$DefaultMessage =  if $defaultFact "" else " (" + $DimString2 + ")";
													$factAmt = first-value({nonils @concept = $targetElement @cube.drs-role = $cube.drs-role}.string, max(list(getDimensionSums($targetElement , $cube, $cube.drs-role))).string)
													$weight =  if $x[2] == 1
																		"+"
																else
																		"-";
													$strLength = $targetElement.local-name.string.length;
													$pad = sum(list(for $x in range(150 - $strLength - $factAmt.length - $DefaultMessage.length)
																					" " 
																					)
																			);
											"" + $weight + "  \t" + $targetElement.local-name.string + $DefaultMessage + $pad + $factAmt  +  " \n"
													)
									);

					/** Compare the addends to the sum.  This is only done for the current reporting period. This is to prevent bleed though from incomplete periods, and we know the current period should always be complete.**/
					$sum2 = if taxonomy().concept($concept_item).period-type == duration
								{nonils @concept = $concept_item @cube.drs-role = $cube.drs-role @@period.end = $document_period_end_date @@period.start = $document_period_start_date }
							else
								{nonils @concept = $concept_item @cube.drs-role = $cube.drs-role @@period.end = $document_period_end_date};
					
					if $addend == none
						skip 
					else
						$calcComponentConcepts = (filter $calcComponents returns $item[1]).to-set
						/** Deals with FASB Guidance **/
						if $concept_item in list(NoninterestIncome) and length($calcComponentConcepts intersect set(RevenueFromContractWithCustomerExcludingAssessedTax, RevenueFromContractWithCustomerIncludingAssessedTax))> 0
							 tolerance_for_decimals_comp($sum2, $addend, $sum2.decimals, 2) and $sum2 > $addend
						else			
							tolerance_for_decimals_comp($sum2, $addend, $sum2.decimals, 2)

message
"The statement {$cube.drs-role.description} includes an inconsistent calculation. The value of the concept {$concept_item} of {$sum2} {if length($sum2.dimensions.values) > 0 'for ' + $sum2.dimensions.values.join(',') else "in the default"} should be equal to the sum of its child components defined in the calculation linkbase. The sum of these child components is {$addend}. The values of the addends is determined by adding the values of the child concepts. If a value is not available then the values associated with the members of the dimension  are used to complete the calculation. The values reported in the financial statement in the current reporting period of {$sum2.period} should be complete if the financial statement is to be mathematically accurate and complete. The components of {$concept_item} that should add to {$sum2} are comprised of the following:

{$addend_string}

The addends are calculated based on the calculation linkbase defined for {$cube.drs-role.description}. If addends are missing then the calculation tree should be amended. The rule will add dimension components as well, so if the calculation is correct and the breakdown is a dimension, then check to ensure that the dimensions are defined correctly. Values calculated by adding a dimension member are shown in the calculation.


Total Element : {$concept_item}
Total Value : {$sum2} 
Total period : {$sum2.period} 
Dimensions : {$sum2.dimensions.join(', ','=')}
Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}"


severity error

effectiveDate $effective_dates[$rule_id]

rule-focus $sum2