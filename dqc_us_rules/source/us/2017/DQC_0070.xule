/**

DQC Rules
 (c) Copyright 2017 - 2018, XBRL US Inc. All rights reserved.
 See https://xbrl.us/dqc-license for license information.
 See https://xbrl.us/dqc-patent for patent infringement notice.
Taxonomy: US GAAP 2017

**/

rule-name-prefix DQC

assert US.0070.7645 satisfied

/** Find all the places where the Categories Axis is Used **/

$drs_roles = navigate dimensions children from DefinedBenefitPlanByPlanAssetCategoriesAxis returns set drs-role;

/** Get a list of all the members on the axis and the role they are used in **/

$drs_members = dict(for $drs_role in $drs_roles
					list($drs_role, navigate dimensions descendants from DefinedBenefitPlanByPlanAssetCategoriesAxis drs-role $drs_role));
					
/** Get the count of the role that has the most members and record this.  We have assumed that the role with the most members represents the complete population of members that should be aggregated.
	Companies will report a sub group of pension members that comprise Level 3 Assets.  These cannot be aggregated and compared.  However they should be less than aggragated PLan Assets **/

$drs_max_count = max(filter $drs_members.values returns $item.length);


/** Loop through each role and evaluate that the members add to the total in the default. **/
for  $x in $drs_members.keys

	/** Get a list of the members **/
	$member_descendants = navigate dimensions descendants from DefinedBenefitPlanByPlanAssetCategoriesAxis drs-role $x;
	
	/** This generates a list of the member values that we will sum. It excludes vcalues for members that are already included as part of a subtotal.  It does this by looking if a members ancestor has a value. If it does the amount is not included in the total. **/
	$member_facts = list(for $member in $member_descendants
		$ancestors_list = navigate dimensions domain-member ancestors from $member drs-role $x;
		if list({@DefinedBenefitPlanFairValueOfPlanAssets @DefinedBenefitPlanByPlanAssetCategoriesAxis in $ancestors_list}).length > 0
			skip
		else 
			{@DefinedBenefitPlanFairValueOfPlanAssets @DefinedBenefitPlanByPlanAssetCategoriesAxis = $member});
	
	/** If there are no member facts the rule ends else the subtotal is evaluated **/
	if 	$member_facts.length == 0 
	 skip
	else
		
		/** aggregate the fact values on the axis **/
		$member_sum = sum($member_facts);
		
		/** Make a string that shows the components of the components that comprise the total **/
		$member_string = sum(list(for $member_fact in $member_facts
			"\t" + $member_fact.dimension(DefinedBenefitPlanByPlanAssetCategoriesAxis).local-name + " --> {$member_fact}" + " --> {$member_fact.dimensions.join(', ','=')} \n"));
		
		/** Evaluate if either the calulated total is greater than the reported total (For level 3), or if it is the total population that they are the same within a tolerence of 2 **/
		
		/** This uses drs_max_count which is the value of the role with the most members **/
		
		if $drs_members[$x].length != $drs_max_count
			skip
			/**{@concept = DefinedBenefitPlanFairValueOfPlanAssets @DefinedBenefitPlanByPlanAssetCategoriesAxis = none}#FairValueOfPlanAssets <  $member_sum and $member_sum != 0 **/
		else						
			tolerance_for_decimals({@concept = DefinedBenefitPlanFairValueOfPlanAssets @DefinedBenefitPlanByPlanAssetCategoriesAxis = none}#FairValueOfPlanAssets, $member_sum, 2 ) and $member_sum != 0

message
"The concept DefinedBenefitPlanFairValueOfPlanAssets with a defaulted value of {$FairValueOfPlanAssets} is not equal to the dimensionally qualified with the DefinedBenefitPlanByPlanAssetCategoriesAxis which has an aggregate value of {$member_sum}. 
Which is comprised of the following memberes in the network {$x}
{$member_string}

The value of a concept broken down by its components along the DefinedBenefitPlanByPlanAssetCategoriesAxis axis should  be equal to its component pieces. Please check that either the default value of {$FairValueOfPlanAssets} is correct for DefinedBenefitPlanFairValueOfPlanAssets or that correct dimensions have been defined. In the case where the filer has reported a sub component of plan assets but not a complete breakdown then the element DefinedBenefitPlanPlanAssetsInvestmentWithinPlanAssetCategoryAmount should be used instead of the element DefinedBenefitPlanFairValueOfPlanAssets.

This rule aggregates the value of member components located on the axis at the highest level of aggregation to avoid double counting in the event that the company uses a hierarchy of members.

The properties of this {$FairValueOfPlanAssets.concept} fact are:
Period :{$FairValueOfPlanAssets.period}
Dimensions : {$FairValueOfPlanAssets.dimensions.join(', ','=')}
Unit : {$FairValueOfPlanAssets.unit}

{$drs_members[$x].length}
{$drs_max_count}

Rule Element Id:7645
Rule version: {$ruleVersion}"


SEVERITY error




