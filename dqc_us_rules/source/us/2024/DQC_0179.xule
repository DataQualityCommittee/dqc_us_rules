/**
DQC Rules
 (c) Copyright 2017 - 2025, XBRL US Inc. All rights reserved.
 See https://xbrl.us/dqc-license for license information.
 See https://xbrl.us/dqc-patent for patent infringement notice.
Taxonomy: US GAAP ALL

WARNING : THIS IS A SINGLE FILE ON CHANGE TO THIS AFFECTS 5 files 2024, 2023, 2022, 2021, 2020
This was created using a hardlink ln {original} {new}

**/

RULE-NAME-PREFIX DQC


ASSERT US.0179.10139 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


$dividendEventConcepts = list(DividendsPayableAmountPerShare,DividendsPayableDateOfRecordDayMonthAndYear,DividendsPayableDateDeclaredDayMonthAndYear,DividendPayableDateToBePaidDayMonthAndYear,CommonStockDividendsPerShareDeclared, PreferredStockDividendsPerShareDeclared)

$badDividendAxis = list(
                        qname($EXTENSION_NS,'DividendDeclarationDateAxis'),
                        qname($EXTENSION_NS,'DividendDeclaredAxis'),
                        AwardTypeAxis,
                        srt:TitleOfIndividualAxis,
                        srt:CurrencyAxis,
                        srt:RangeAxis,
                        qname($EXTENSION_NS,'DividendsDeclaredTypeAxis'),
                        qname($EXTENSION_NS,'DistributionsPaymentDateAxis'),
                        AwardDateAxis,
                        StatementEquityComponentsAxis,
                        FairValueByAssetClassAxis,
                        RelatedPartyTransactionsByRelatedPartyAxis,
                        SubsidiarySaleOfStockAxis,
                        DebtInstrumentAxis,
                        LongtermDebtTypeAxis)

$validAxis = filter taxonomy().concepts where $item.name in $badDividendAxis returns $item.name;

for $axis in $validAxis
           /** Where clause added to make exception if range axis is used where have multiple subs with different dividend rates.  If have should have legal entities paying each dividend and range of values
           Have to have both range axis and legal entity axis**/
           $divFact = {@concept in $dividendEventConcepts @$axis = * where not ($fact.dimension(srt:RangeAxis) != none and $fact.dimension(qname($DEI_NAMESPACE,'LegalEntityAxis')) != none) }
           exists($divFact)

message
"The filing includes a value for dividends using the concept {$divFact.concept.name} with a value of {$divFact}. This value is reported with the dimension  {$axis}.  This dimension should not be used with the concept {$divFact.concept.name}.  Please check the filing and use the DividendsAxis with this value.

The properties of this  fact are:
Period :{$divFact.period}
Dimensions : {$divFact.dimensions.join(', ','=')}
Unit : {$divFact.unit}

Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}"

severity error
rule-focus $divFact

effectiveDate $effective_dates[$rule_id]

ASSERT US.0179.10140 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


$dividendDateConcepts = list(
                            list(DividendsPayableDateDeclaredDayMonthAndYear,DividendsPayableDateOfRecordDayMonthAndYear),
                            list(DividendsPayableDateDeclaredDayMonthAndYear,DividendPayableDateToBePaidDayMonthAndYear),
                            list(DividendsPayableDateOfRecordDayMonthAndYear,DividendPayableDateToBePaidDayMonthAndYear)
                            )

for $date in $dividendDateConcepts 
    $firstDate = {nonils @concept = $date[1] @period=*} 
    $secondDate = {nonils @concept = $date[2] @period=*}
    $firstDate > $secondDate

message
"The date reported for {$firstDate.concept.name} of {$firstDate} is greater than or equal to the date reported for {$secondDate.concept.name} of {$secondDate}. The value of {$firstDate.concept.name} must be earlier than the date reported for {$secondDate.concept.name}. If this error occurs because seperate dividend events and associated values are distinguished by the context date, then each distinct dividend event should be identifed using the DividendsAxis and a discrete member for each dividend such as RegularDividendQ1Y2024Member.

The properties of  {$firstDate.concept.name} with a date of {$firstDate} are:
Period :{$firstDate.period}
Dimensions : {$firstDate.dimensions.join(', ','=')}

The properties of  {$secondDate.concept.name} with a date of {$secondDate} are:
Period :{$secondDate.period}
Dimensions : {$secondDate.dimensions.join(', ','=')}

Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}"

severity error
rule-focus $firstDate

effectiveDate $effective_dates[$rule_id]


ASSERT US.0179.10141 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


$perShare = {@concept = CommonStockDividendsPerShareDeclared where $fact.inline-scale != none and $fact.inline-scale > 0}
true

message
"The concept CommonStockDividendsPerShareDeclared has been reported with a value of {$perShare}, with a inline-scale of {$perShare.inline-scale }. Generally the amount per share are not scaled when reported. This means the value in the XBRL report is overstated by the scale factor of {$perShare.inline-scale}.

The properties of  {$perShare.concept.name} are:
Period :{$perShare.period}
Dimensions : {$perShare.dimensions.join(', ','=')}
Scale: {$perShare.inline-scale }

Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}"

severity error

effectiveDate $effective_dates[$rule_id]

/** Values before year end should be represeneted using the period it applies to for CommonStockDividendsPerShareDeclared.  DIvidend declared amount represents an expense and should be allocated to a period so that it can be compared to EPS which has periods. Really about getting the accounting alignment.  Identify reporting periods used in the filing and check dividends declared falls into one of them. Look for period durations with more than 4 durations as represntative.

Facts on the DividensAxis are excluded as they do not have date alignment as they represent the dividend event. Periods greater than a 13 months (398 days) are not considered valid periods to align with **/

constant $DICT_OF_DURATIONS = (filter list({covered @concept.period-type = duration where $fact.period.days < 398}) returns list($item.period)).agg-to-dict(1)
constant $DICT_OF_DURATION_FREQUENCY =  dict(
                                                for $key in $DICT_OF_DURATIONS.keys
                                                    list($key, $DICT_OF_DURATIONS[$key].length)
                                            )

ASSERT US.0179.10142 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


$periodEnd = [covered @concept.local-name = 'DocumentPeriodEndDate']

$perShare = {@concept in list(CommonStockDividendsPerShareDeclared, PreferredStockDividendsPerShareDeclared) where $fact.period.end < $periodEnd}
$start = $perShare.period.start;
$end = $perShare.period.end;

$validDurations = set(for $key in $DICT_OF_DURATIONS.keys
        if duration_contained($perShare.period, $key)
            $key
        else
            skip)

$frequencyOfDuration = $DICT_OF_DURATION_FREQUENCY[$perShare.period]

$perShareQuarterlyCheck = if $perShare.period.days > 85 and $perShare.period.days < 95
                                false
                          else
                                true

$frequencyOfDuration < 5 and $validDurations.length > 0  and $perShareQuarterlyCheck

message
"The concept {$perShare.concept.name} has been reported with a value of {$perShare}.  This value is reported with a duration starting on {$start} and ending on {$end}.  This period does not align with the reporting periods of the report.  Adjust the reporting period to reflect one of the following reporting durations {$validDurations.join(', ')}. This rule is flagging because the value reported for {$perShare.concept.name} is prior to the report year end and should have been expensed for a period. This period should be associated with this fact.  This makes it possible to compare the value with similar metrics such as earnings per share. If the dates are used to seperate two dividends within the same reporting period then the DividendsAxis should be used to seperate the values.

The properties of  {$perShare.concept.name} are:
Period :{$perShare.period}
Dimensions : {$perShare.dimensions.join(', ','=')}

Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}"

severity error
rule-focus $perShare

effectiveDate $effective_dates[$rule_id]


ASSERT US.0179.10143 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else



$factsPerDividendAxis = list({covered @DividendsAxis=* })

$dictOfConceptsUsedOnDivididendAxis = (filter $factsPerDividendAxis returns list(list($item.concept.name, $item.dimension(DividendsAxis).name))).agg-to-dict(1)

for $key in $dictOfConceptsUsedOnDivididendAxis.keys
            if $dictOfConceptsUsedOnDivididendAxis[$key].length > 1
                $factValues = list({@concept = $key[1] @DividendsAxis=$key[2] @period=* @StatementClassOfStockAxis = none});
                if $factValues.length > 1
                    true
                else
                    false
            else
                false

message
"The filing has used the DividendsAxis with the member {$key[2]}, but has used the concept {$key[1]} multiple times on this axis with different period contexts. The concept {$key[1]} has been used mutiple times to capture the values {$factValues.join(' and ')} for the periods {$factValues.period.join(' and ')}.  The DividendAxis should use discrete members to represent different dividend events. The same concept should not be used more than once with the same dividend member {$key[2]}.

Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}"

severity error
rule-focus $factValues.first

effectiveDate $effective_dates[$rule_id]

ASSERT US.0179.10144 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else



$divPerShareDeclared = {nonils @DividendsPayableAmountPerShare @period=* @unit=*}

$divPayDate = {nonils @DividendPayableDateToBePaidDayMonthAndYear @period=* @unit}

$divPayMonth = {nonils @DividendsPayableDateToBePaidMonthAndYear @period=* @unit} + '-01'

$divPayMonthEnd = if $divPayMonth  == '-01' 
                            skip 
                    else 
                        date($divPayMonth) + time-span('P1M')

$dividendPayDate = first-value($divPayDate, $divPayMonthEnd) 

$divPerShareDeclared.period.end > $dividendPayDate

message
"The element DividendsPayableAmountPerShare has a value of {$divPerShareDeclared} at {$divPerShareDeclared.period.end}. This represents the amount of dividends that are payable per share at {$divPerShareDeclared.period.end}. However, the payment date associated with the dividend has passed. The payment date associated with the dividend is {$dividendPayDate}. To resolve the issue the value of the context for DividendsPayableAmountPerShare should be changed to the declaration date or the value of DividendsPayableDateOfRecordDayMonthAndYear or DividendsPayableDateToBePaidMonthAndYear should be changed to reflect the date the dividend will be paid. If the payment date relates to a seperate dividened distribution unrelated to DividendsPayableAmountPerShare then the value of {$dividendPayDate} should be reported using the DividendsAxis.

The properties of  {$divPerShareDeclared.concept.name} are:
Period :{$divPerShareDeclared.period}
Dimensions : {$divPerShareDeclared.dimensions.join(', ','=')}

Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}"

severity error
rule-focus $divPerShareDeclared

effectiveDate $effective_dates[$rule_id]


ASSERT US.0179.10151 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


$DividendDates = list(DividendsPayableDateDeclaredDayMonthAndYear,DividendsPayableDateOfRecordDayMonthAndYear,DividendPayableDateToBePaidDayMonthAndYear)

$divDate = {@concept in  $DividendDates @DividendsAxis = none}

exists($divDate)

message
"The filing includes a  value of {$divDate} for using the concept {$divDate.concept.name} with no DividendsAxis member defined.  When reporting dividend dates in a filing the filer should use the DividendsAxis to associate dividend dates with the related dividend disclosures. 

The properties of this  fact are:
Period :{$divDate.period}
Dimensions : {$divDate.dimensions.join(', ','=')}
Unit : {$divDate.unit}

Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}"

severity error
rule-focus $divDate

effectiveDate $effective_dates[$rule_id]