/**
DQC Rules
 (c) Copyright 2017 - 2025, XBRL US Inc. All rights reserved.
 See https://xbrl.us/dqc-license for license information.
 See https://xbrl.us/dqc-patent for patent infringement notice.
Taxonomy: US GAAP 2025
**/


rule-name-prefix DQC

CONSTANT $DOCUMENT_PERIOD = first(list({covered @concept.local-name = 'DocumentPeriodEndDate'}))
CONSTANT $DOCUMENT_PERIOD_END_DATE = $DOCUMENT_PERIOD.period.end - time-span("P1D")

assert US.0212.10736 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


    $present_fact = [@CommonStockSharesOutstanding @@period.end = $DOCUMENT_PERIOD_END_DATE];
    $not_present_fact1 = [@CommonStockSharesIssued @@period.end = $DOCUMENT_PERIOD_END_DATE];
	$not_present_fact2 = {@SharesIssued @StatementClassOfStockAxis = * @@period.end = $DOCUMENT_PERIOD_END_DATE};
	$not_present_fact3 = [@SharesIssued @@period.end = $DOCUMENT_PERIOD_END_DATE];

    exists($present_fact) and missing($not_present_fact1) and missing($not_present_fact2) and missing($not_present_fact3)

message

"A value was reported for {$present_fact.name} with a value of {$present_fact}. A value was not reported to represent shares issued. If shares outstanding and shares issued are the same, then the value should be tagged with the concept {$present_fact.name} and the concept CommonStockSharesIssued.

The properties of this {$present_fact.name} fact are:

Period: {$present_fact.period}
Unit: {$present_fact.unit}
Rule version: {$ruleVersion}"

severity error  
status $status  

effectiveDate $effective_dates[$rule_id]


assert US.0212.10737 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


    $present_fact = [@SharesOutstanding @@period.end = $DOCUMENT_PERIOD_END_DATE];
    $not_present_fact1 = [@CommonStockSharesIssued @@period.end = $DOCUMENT_PERIOD_END_DATE];
	$not_present_fact2 = {@SharesIssued @StatementClassOfStockAxis = * @@period.end = $DOCUMENT_PERIOD_END_DATE};
	$not_present_fact3 = [@SharesIssued @@period.end = $DOCUMENT_PERIOD_END_DATE];

    exists($present_fact) and missing($not_present_fact1) and missing($not_present_fact2) and missing($not_present_fact3)

message

"A value was reported for {$present_fact.name} with a value of {$present_fact}. A value was not reported to represent shares issued. If shares outstanding and shares issued are the same, then the value should be tagged with the concept {$present_fact.name} and the concept CommonStockSharesIssued.

The properties of this {$present_fact.name} fact are:

Period: {$present_fact.period}
Unit: {$present_fact.unit}
Rule version: {$ruleVersion}"

severity error  
status $status  

effectiveDate $effective_dates[$rule_id]


assert US.0212.10738 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

    $present_fact = [@CommonStockSharesOutstanding  @unit @@period.end = $DOCUMENT_PERIOD_END_DATE];
    $not_present_fact1 = [@CommonStockSharesAuthorized @StatementClassOfStockAxis @unit @@period.end  = $DOCUMENT_PERIOD_END_DATE];
	$not_present_fact2 = [@CommonStockSharesAuthorizedUnlimited @StatementClassOfStockAxis @unit @@period.end = $DOCUMENT_PERIOD_END_DATE];

    exists($present_fact) and missing($not_present_fact1) and missing($not_present_fact2)

message

"A value was reported for {$present_fact.name} with a value of {$present_fact}. A value was not reported to represent shares authorized. If shares outstanding and shares authorized are the same, then the value should be tagged with the concept {$present_fact.name} and the concept CommonStockSharesAuthorized.  If the authorized stock is unlimited it should be tagged with the concept CommonStockSharesAuthorizedUnlimited.

The properties of this {$present_fact.name} fact are:

Period: {$present_fact.period}
Unit: {$present_fact.unit}
Rule version: {$ruleVersion}"

severity error  
status $status  

effectiveDate $effective_dates[$rule_id]


assert US.0212.10739 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


    $present_fact = [@SharesOutstanding @@period.end = $DOCUMENT_PERIOD_END_DATE];
    $not_present_fact1 = [@CommonStockSharesAuthorized @unit @@period.end = $DOCUMENT_PERIOD_END_DATE];
	$not_present_fact2 = [@CommonStockSharesAuthorizedUnlimited @unit @@period.end = $DOCUMENT_PERIOD_END_DATE];
	$not_present_fact3 = [@CommonStockSharesAuthorized @StatementClassOfStockAxis = * @unit @@period.end = $DOCUMENT_PERIOD_END_DATE];

    exists($present_fact) and missing($not_present_fact1) and missing($not_present_fact2) and missing($not_present_fact3)

message

"A value was reported for {$present_fact.name} with a value of {$present_fact}. A value was not reported to represent shares authorized. If shares outstanding and shares authorized are the same, then the value should be tagged with the concept {$present_fact.name} and the concept CommonStockSharesAuthorized.  If the authorized stock is unlimited it should be tagged with the concept CommonStockSharesAuthorizedUnlimited.

The properties of this {$present_fact.name} fact are:

Period: {$present_fact.period}
Unit: {$present_fact.unit}
Rule version: {$ruleVersion}"

severity error  
status $status  

effectiveDate $effective_dates[$rule_id]