/**
DQC Rules
 (c) Copyright 2017 - 2025, XBRL US Inc. All rights reserved.
 See https://xbrl.us/dqc-license for license information.
 See https://xbrl.us/dqc-patent for patent infringement notice.
Taxonomy: US GAAP 2024
Release Version 18
**/

rule-name-prefix DQC

assert US.0001.51 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

/** Determine the members on the axis in the taxonomy using the definition linkbase CHANGE TO - dimensions dimension-member **/

$member_extension = navigate dimensions dimension-member descendants from FairValueByFairValueHierarchyLevelAxis returns set (target-name);

/** Define allowable extensions with the qname function **/

/** In 2018 InvestmentsNetAssetValueMember has to be removed **/

$allowable_extensions = set(qname($EXTENSION_NS,'FairValueInputsLevel1AndLevel2Member'),
						qname($EXTENSION_NS,'FairValueInputsLevel2AndLevel3Member'),
						qname($EXTENSION_NS,'FairValueInputsLevel1AndLevel3Member'));
						/** qname($extension_ns,'FairValueMeasuredAtNetAssetValuePerShareMember'));  ADDED TO THE TAXONOMY**/  

/** Union the sets**/

$allowed_members = $allowable_extensions + $MEMBER_USGAAP_FAIR_VALUE;

$unallowed_members = $member_extension - $allowed_members;

/** Evaluate if facts exists with the unallowable members **/
/** We have used covered because if it was not covered then the processor looks for alignmnet. This means that the exist will run and if it does not get a result then the processor will stop processing results. i.e. the non existence of the fact means the iteration does not run and the else statement does not run.
**/
	for ($member in $unallowed_members)
		$fact1 = {covered @FairValueByFairValueHierarchyLevelAxis = $member};
		if exists($fact1)
			$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the FairValueByFairValueHierarchyLevelAxis and the unallowable member {$member.local-name}. The filer should use members from the US GAAP taxonomy that are children of the FairValueByFairValueHierarchyLevelAxis axis or the allowable extensions of : {$allowable_extensions.join(', ')}.

The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
			true
		else 
			$message_for_fact = " The member {$member.local-name} is used on the axis FairValueByFairValueHierarchyLevelAxis. There are no facts associated with this member and axis.";
			true


message
"{$message_for_fact}


Rule Element Id:51
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]


assert US.0001.52 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

/** Determine the members on the axis in the taxonomy using the definition linkbase **/

$allowed_members = $MBR_RECL_OUT_ACCUM_CMP_INC_AXS;

$member_extension = navigate dimensions dimension-member descendants from ReclassificationOutOfAccumulatedOtherComprehensiveIncomeAxis returns set (target-name);

$unallowed_members = $member_extension - $allowed_members;

/** Evaluate if facts exists with the unallowable members **/

for ($member in $unallowed_members)
	$fact1 = {covered @ReclassificationOutOfAccumulatedOtherComprehensiveIncomeAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the ReclassificationOutOfAccumulatedOtherComprehensiveIncomeAxis and the unallowable member {$member.local-name}. 
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
			true
	else 
			$message_for_fact = " The member {$member.local-name}is inappropriately used on the axis ReclassificationOutOfAccumulatedOtherComprehensiveIncomeAxis. The only members allowed on this axis are {$allowed_members.join(', ')} . There are no facts associated with this member and axis.";
			true

message
"{$message_for_fact}

Rule Element Id:52
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]

assert US.0001.53 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


$base_members = navigate dimensions dimension-member descendants from OtherOwnershipInterestsByNameAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);
$allowed_base_member = set(OtherOwnershipInterestsNameDomain);
$unallowed_base_members = $base_members - $allowed_base_member;

for ($member in $unallowed_base_members)
	$fact1 = {covered @OtherOwnershipInterestsByNameAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the OtherOwnershipInterestsByNameAxis and the base taxonomy member {$member.local-name}. Only extension members should be used with the axis OtherOwnershipInterestsByNameAxis.
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis OtherOwnershipInterestsByNameAxis. The only members allowed on this axis are extension members defined by the filer. There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:53
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]


assert US.0001.54 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

/** Determine the members on the axis in the taxonomy using the definition linkbase **/

/** Use nested navigation as the LegalEntityAxis in the US GAAP taxonomy is not a valid hypercube in all cases so the dimensions will not return all members. Specifically the 190000 group **/
$allowed_members_lea = $MEM_LEG_ENT_AXS;
$allowed_members_FHLB = $MEM_FHLB_AXS;

$allowed_base_member = set(CoVenturerMember, SpinoffMember, PartnershipMember, LimitedLiabilityCompanyMember, TrustForBenefitOfEmployeesMember
						, qname($DEI_NAMESPACE, 'EntityDomain')
						);

$member_extension = navigate dimensions dimension-member descendants 
					from qname($DEI_NAMESPACE, 'LegalEntityAxis') 
					where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);

$allowed_members = $allowed_members_lea + $allowed_members_FHLB + $allowed_base_member;

$unallowed_base_members = $member_extension - $allowed_members;

/** Evaluate if facts exists with the unallowable members **/

	for ($member in $unallowed_base_members)
		$fact1 = {covered where $fact.dimension(qname($DEI_NAMESPACE, 'LegalEntityAxis')) == taxonomy().concept($member)};
		if exists($fact1)
			$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the LegalEntityAxis and the unallowable member {$member.local-name}. Only extension members should be used with the axis LegalEntityAxis other than the members predefined in the US-GAAP taxonomy. 
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
				true
		else 
				$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis LegalEntityAxis. The only members allowed on this axis are extensions or legal entities defined in the US GAAP taxonomy. There are no facts associated with this member and axis.";
				true

message
"{$message_for_fact}

Rule Element Id:54
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]




assert US.0001.56 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


$base_members = navigate dimensions dimension-member descendants from NoncashOrPartNoncashDivestituresByUniqueNameAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);
$allowed_base_member = set(NoncashOrPartNoncashDivestitureNameDomain);
$unallowed_base_members = $base_members - $allowed_base_member;

for ($member in $unallowed_base_members)
	$fact1 = {covered @NoncashOrPartNoncashDivestituresByUniqueNameAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the NoncashOrPartNoncashDivestituresByUniqueNameAxis and the base taxonomy member {$member.local-name}. Only extension members should be used with the axis NoncashOrPartNoncashDivestituresByUniqueNameAxis.
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis NoncashOrPartNoncashDivestituresByUniqueNameAxis. The only members allowed on this axis are extension members defined by the filer. There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:56
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]


assert US.0001.57 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

/** UPDATED FOR SRT **/

$base_members = navigate dimensions dimension-member descendants from srt:ScheduleOfEquityMethodInvestmentEquityMethodInvesteeNameAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);
$allowed_base_member = $MBR_SCH_EQT_INV_NM_AXS;
$unallowed_base_members = $base_members - $allowed_base_member;

for ($member in $unallowed_base_members)
	$fact1 = {covered @srt:ScheduleOfEquityMethodInvestmentEquityMethodInvesteeNameAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the ScheduleOfEquityMethodInvestmentEquityMethodInvesteeNameAxis and the base taxonomy member {$member.local-name}. Only extension members should be used with the axis ScheduleOfEquityMethodInvestmentEquityMethodInvesteeNameAxis.
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis ScheduleOfEquityMethodInvestmentEquityMethodInvesteeNameAxis. The only members allowed on this axis are extension members defined by the filer. There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:57
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]


assert US.0001.58 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


/** UPDATED FOR SRT **/
$base_members = navigate dimensions dimension-member descendants from srt:CounterpartyNameAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);
$allowed_base_member = set(srt:RepurchaseAgreementCounterpartyNameDomain, srt:AffiliatedEntityMember, InvestorMember, VariableInterestEntityNotPrimaryBeneficiaryMember, srt:ChiefFinancialOfficerMember, IndividualMember, GovernmentMember, srt:GuarantorSubsidiariesMember, srt:SubsidiaryIssuerMember, srt:DirectorMember, srt:ChiefExecutiveOfficerMember, srt:ChiefOperatingOfficerMember, GeneralPartnerMember, CorporateJointVentureMember, SubsidiaryOfCommonParentMember, IndividuallyImmaterialCounterpartiesMember);
$unallowed_base_members = $base_members - $allowed_base_member;

for ($member in $unallowed_base_members)
	$fact1 = {covered @srt:CounterpartyNameAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the CounterpartyNameAxis and the base taxonomy member {$member.local-name}. Only extension members should be used with the axis CounterpartyNameAxis.
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis CounterpartyNameAxis. The only members allowed on this axis are extension members defined by the filer and the following members in the US-GAAP taxonomy {$allowed_base_member.join(', ')} . There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:58
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]

assert US.0001.59 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


$base_members = navigate dimensions dimension-member descendants from PlanNameAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);
$allowed_base_member = $MBR_PLN_NM_AXS;
$unallowed_base_members = $base_members - $allowed_base_member;

for ($member in $unallowed_base_members)
	$fact1 = {covered @PlanNameAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the PlanNameAxis and the base taxonomy member {$member.local-name}. Only extension members should be used with the axis PlanNameAxis.
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis PlanNameAxis. The only members allowed on this axis are extension members defined by the filer. There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:59
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]

/** RULE REMOVED AS AXIS HAS BEEN DEPRECATED **/

/**
assert US.0001.60 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];


$base_members = navigate dimensions dimension-member descendants from DefinedContributionPlanNameAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);
$allowed_base_member = $MEM_DEF_CNT_PLN_NM_AXS;
$unallowed_base_members = $base_members - $allowed_base_member;

for ($member in $unallowed_base_members)
	$fact1 = {covered @DefinedContributionPlanNameAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the DefinedContributionPlanNameAxis and the base taxonomy member {$member.local-name}. Only extension members should be used with the axis DefinedContributionPlanNameAxis.
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis DefinedContributionPlanNameAxis. The only members allowed on this axis are extension members defined by the filer. There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:60
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]
**/

assert US.0001.61 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

/** Determine the members on the axis in the taxonomy using the definition linkbase **/
/** UPDATED FOR SRT **/

$allowed_members = $MEM_RNG_AXS;

$member_extension = navigate dimensions dimension-member descendants from srt:RangeAxis returns set (target-name);

$unallowed_members = $member_extension - $allowed_members;

/** Evaluate if facts exists with the unallowable members **/

	for ($member in $unallowed_members)
		$fact1 = {covered @srt:RangeAxis = $member};
		if exists($fact1)
			$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the RangeAxis and the unallowable member {$member}. 
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
				true
		else 
				$message_for_fact = "The member {$member} is inappropriately used on the axis RangeAxis. The only members allowed on this axis are {$allowed_members.join(', ')} . There are no facts associated with this member and axis.";
				true

message
"{$message_for_fact}

Rule Element Id:61
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]


assert US.0001.62 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


/** Use nested navigation as the Currency Axis in the US GAAP taxonomy is not a valid hypercube in all cases so the dimensions will not return all members. Specifically the 190000 group **/
/** UPDATED FOR SRT **/
$member_USGAAP_pre_currency = $MEM_SRT_CUR_AXS;

$member_Currency = $MEM_CUR_AXS;

$member_USGAAP = $member_USGAAP_pre_currency + $member_Currency;

$member_extension = navigate dimensions dimension-member descendants from srt:CurrencyAxis returns set (target-name);

/** Define allowable extensions with the qname function. XBT is used for bitcoin. **/

$allowable_extensions = set(qname($EXTENSION_NS,'SICAD1Member'), qname($EXTENSION_NS,'SICAD2Member'),qname($EXTENSION_NS,'CENCOEXMember'),qname($EXTENSION_NS,'SICADMember'),qname($EXTENSION_NS,'SIMADIMember'),qname($EXTENSION_NS,'DIPROMember'),qname($EXTENSION_NS,'DICOMMember'),qname($EXTENSION_NS,'XBT'));

$Currencies_Not_In_US-GAAP_Taxonomy = set(currency:VES, currency:SVC, currency:STN, currency:MRU);

/** Union the sets**/

$allowed_members = $allowable_extensions + $member_USGAAP + $Currencies_Not_In_US-GAAP_Taxonomy;

$unallowed_members = $member_extension - $allowed_members;

/** Evaluate if facts exists with the unallowable members **/
/** We have used covered because if it was not covered then the processor looks for alignmnet. This means that the exist will run and if it does not get a result then the processor will stop processing results. i.e. the non existence of the fact means the iteration does not run and the else statement does not run.
**/
for ($member in $unallowed_members)
	$fact1 = {covered @srt:CurrencyAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the CurrencyAxis and the unallowable member {$member}. 
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is used on the axis CurrencyAxis. The Currency Axis should only be used with the members defined in the US GAAP taxonomy or the following extension members: {$allowable_extensions.join(', ')} .There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:62
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]


assert US.0001.63 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

/** Determine the members on the axis in the taxonomy using the definition linkbase CHANGE TO - dimensions dimension-member **/

$member_USGAAP = $MEM_POS_AXS;

$member_extension = navigate dimensions dimension-member descendants from PositionAxis returns set (target-name);

/** Define allowable extensions with the qname function **/

$allowable_extensions = set(qname($EXTENSION_NS,'NetLongPositionMember'), qname($EXTENSION_NS,'NetShortPositionMember'));

/** Union the sets**/

$allowed_members = $allowable_extensions + $member_USGAAP;

$unallowed_members = $member_extension - $allowed_members;

/** Evaluate if facts exists with the unallowable members **/
/** We have used covered because if it was not covered then the processor looks for alignmnet. This means that the exist will run and if it does not get a result then the processor will stop processing results. i.e. the non existence of the fact means the iteration does not run and the else statement does not run.
**/
for ($member in $unallowed_members)
	$fact1 = {covered @PositionAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the PositionAxis and the unallowable member {$member.local-name}. 
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is used on the axis PositionAxis. The Position Axis should only be used with the members defined in the US GAAP taxonomy or the following extension members: {$allowable_extensions.join(', ')} .There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:63
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]

assert US.0001.64 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

/** Determine the members on the axis in the taxonomy using the definition linkbase **/

$allowed_members = $MEM_FAR_VAL_MSR_FRQ_AXS;

$member_extension = navigate dimensions dimension-member descendants from FairValueByMeasurementFrequencyAxis returns set (target-name);

$unallowed_members = $member_extension - $allowed_members;

/** Evaluate if facts exists with the unallowable members **/

for ($member in $unallowed_members)
	$fact1 = {covered @FairValueByMeasurementFrequencyAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the FairValueByMeasurementFrequencyAxis and the unallowable member {$member.local-name}. 
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
			true
	else 
			$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis FairValueByMeasurementFrequencyAxis. The only members allowed on this axis are {$allowed_members.join(', ')} . There are no facts associated with this member and axis.";
			true

message
"{$message_for_fact}

Rule Element Id:64
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]

assert US.0001.65 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

/** Determine the members on the axis in the taxonomy using the definition linkbase CHANGE TO - dimensions dimension-member **/

$member_USGAAP = $MEM_FAR_VAL_MSR_BAS_AXS;

$member_extension = navigate dimensions dimension-member descendants from FairValueByMeasurementBasisAxis returns set (target-name);

$default_member = navigate dimension-default descendants from FairValueByMeasurementBasisAxis returns set (target-name);

$default_member_USGAAP = $DEF_FAR_VAL_MSR_BAS_AXS;

$default_Message = if ($default_member.intersect($default_member_USGAAP)).length == 0
"The filer has defined a default member for the axis FairValueByMeasurementBasisAxis of " + $default_member.join(', ') + ". This member is not permitted on this axis, and given that it is the default, this causes every fact in the instance to include this member by default, and thus be an error. The default member should be changed to " + $default_member_USGAAP.join(', ') + " as this is the only default that can be used with this axis."
					else
					"";

/** Define allowable extensions with the qname function **/

$allowable_extensions = set();

/** Union the sets**/

$allowed_members = $allowable_extensions + $member_USGAAP;

$unallowed_members = $member_extension - $allowed_members;

/** Evaluate if facts exists with the unallowable members **/
/** We have used covered because if it was not covered then the processor looks for alignmnet. This means that the exist will run and if it does not get a result then the processor will stop processing results. i.e. the non existence of the fact means the iteration does not run and the else statement does not run.
**/
for ($member in $unallowed_members)
	$fact1 = {covered @FairValueByMeasurementBasisAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1.string.substring(1,300)} is dimensionally qualified with the FairValueByMeasurementBasisAxis and the unallowable member {$member.local-name}.  
" + $default_Message + "
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is used on the axis FairValueByMeasurementBasisAxis. The FairValueByMeasurementBasisAxis should only be used with the members defined in the US GAAP taxonomy or the following extension members: {$allowable_extensions.join(', ')} .There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:65
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]


assert US.0001.66 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

/** Determine the members on the axis in the taxonomy using the definition linkbase CHANGE TO - dimensions dimension-member **/

$member_USGAAP = $MEM_HDG_DSG_AXS;

$member_extension = navigate dimensions dimension-member descendants from HedgingDesignationAxis returns set (target-name);

/** Define allowable extensions with the qname function **/

/**  REMOVED AS ADDED TO THE TAXONOMY $allowable_extensions = set(qname($extension_ns,'NotDesignatedAsHedgingInstrumentEconomicHedgesMember'), qname($extension_ns,'NotDesignatedAsHedgingInstrumentTradingMember')); **/

/** Union the sets**/

$allowed_members = $member_USGAAP;

$unallowed_members = $member_extension - $allowed_members;

/** Evaluate if facts exists with the unallowable members **/
/** We have used covered because if it was not covered then the processor looks for alignmnet. This means that the exist will run and if it does not get a result then the processor will stop processing results. i.e. the non existence of the fact means the iteration does not run and the else statement does not run.
**/
for ($member in $unallowed_members)
	$fact1 = {covered @HedgingDesignationAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the HedgingDesignationAxis and the unallowable member {$member.local-name}. 
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is used on the axis HedgingDesignationAxis. The HedgingDesignationAxis should only be used with the members defined in the US GAAP taxonomy. There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:66
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]

assert US.0001.69 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

/** Determine the members on the axis in the taxonomy using the definition linkbase **/
/** UPDATED FOR SRT **/

$allowed_members_product = $MEM_PRD_SVC_AXS;
/**$allowed_members_reinsurance = navigate dimensions dimension-member descendants from ReinsurancePremiumsForInsuranceCompaniesByProductSegmentAxis taxonomy $US-GAAP returns set (target-name);**/

$allowed_members_aircraft = $MEM_AIR_TP_AXS;
$allowed_members_malpractice_insurance = $MEM_SCH_MPR_INS_AXS;

$allowed_members_ppe = $MEM_PPE_TP_AXS;

$allowed_members_oil_reserves = $MEM_RSV_QTY_RSV_AXS;

$allowed_members_PublicUtilitiesInventoryAxis = $MEM_PUB_UTL_INV_AXS;

$allowed_base_member = set(AuctionRateSecuritiesMember, AutomobileLoanMember, CommercialLoanMember, CommercialRealEstateMember, ConstructionLoansMember, ConsumerLoanMember, srt:CrudeOilMember, srt:FuelMember, GeneralLiabilityMember, srt:HeatingOilMember, HomeEquityLoanMember, HomeEquityMember, LetterOfCreditMember, LineOfCreditMember, LoansMember, srt:NaturalGasLiquidsReservesMember, srt:NaturalGasReservesMember, srt:OilReservesMember, ProfessionalMalpracticeLiabilityMember, RealEstateLoanMember, ResidentialMortgageMember, srt:SyntheticOilMember, ResidentialRealEstateMember, PublicUtilitiesInventoryPropaneMember, PublicUtilitiesInventoryWaterMember, AutomobilesMember, srt:HotelMember, RegionalCarrierMember, MainlineMember);

$member_extension = navigate dimensions dimension-member descendants from srt:ProductOrServiceAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);

$allowed_members = $allowed_members_product + $allowed_members_aircraft + $allowed_members_malpractice_insurance + $allowed_base_member + $allowed_members_ppe + $allowed_members_oil_reserves + $allowed_members_PublicUtilitiesInventoryAxis;

$unallowed_base_members = $member_extension - $allowed_members;

/** Evaluate if facts exists with the unallowable members **/

	for ($member in $unallowed_base_members)
		$fact1 = {covered @srt:ProductOrServiceAxis = $member};
		if exists($fact1)
			$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the ProductOrServiceAxis and the unallowable member {$member.local-name} Only extension members should be used with the axis ProductOrServiceAxis other than the members predefined in the US-GAAP taxonomy. 
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
				true
		else 
				$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis ProductOrServiceAxis. The only members allowed on this axis are extensions or products defined in the US GAAP taxonomy. There are no facts associated with this member and axis.";
				true

message
"{$message_for_fact}

Rule Element Id:69
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]


assert US.0001.70 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

/** Determine the members on the axis in the taxonomy using the definition linkbase CHANGE TO - dimensions dimension-member **/
/** UPDATED FOR SRT **/

$member_USGAAP = $MEM_CON_ITM_AXS;

$member_extension = navigate dimensions dimension-member descendants from srt:ConsolidationItemsAxis returns set (target-name);

/** Define allowable extensions with the qname function **/

$allowable_extensions = set(qname($EXTENSION_NS,'CorporateReconcilingItemsAndEliminationsMember'), qname($EXTENSION_NS,'CorporateAndReconcilingItemsMember'), qname($EXTENSION_NS,'CorporateAndEliminationsMember'), qname($EXTENSION_NS,'EliminationsAndReconcilingItemsMember'), qname($EXTENSION_NS,'OperatingSegmentsAndCorporateNonSegmentMember'), qname($EXTENSION_NS,'OperatingSegmentsExcludingIntersegmentEliminationMember'), qname($EXTENSION_NS,'OtherOperatingSegmentsAndIntersegmentEliminationsMember'), qname($EXTENSION_NS,'OperatingSegmentsAfterReconcilingItemsAndEliminationsMember'));

/** Limit these to extensions filter out base taxonomy elements**/
$ChildExtensions1 = navigate dimensions domain-member descendants from MaterialReconcilingItemsMember returns set (target-name); 

$ChildExtensions2 = navigate dimensions domain-member descendants from srt:ConsolidationEliminationsMember returns set (target-name);

/** Union the sets**/

$allowed_members = $allowable_extensions + $member_USGAAP + $ChildExtensions2 + $ChildExtensions1;

$unallowed_members = $member_extension - $allowed_members;

/** Evaluate if facts exists with the unallowable members **/
/** We have used covered because if it was not covered then the processor looks for alignmnet. This means that the exist will run and if it does not get a result then the processor will stop processing results. i.e. the non existence of the fact means the iteration does not run and the else statement does not run.
**/
for ($member in $unallowed_members)
	$fact1 = {covered @srt:ConsolidationItemsAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the ConsolidationItemsAxis and the unallowable member {$member.local-name}. 
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is used on the axis ConsolidationItemsAxis. The ConsolidationItemsAxis should only be used with the members defined in the US GAAP taxonomy or the following extension members: {$allowable_extensions.join(', ')}. There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:70
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]

assert US.0001.71 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


/*
$not_allowed_base_member_tree_1 = navigate dimensions dimension-member descendants from RetirementPlanTypeAxis taxonomy $US-GAAP returns set (target-name);
$not_allowed_base_member_tree_2 = navigate dimensions dimension-member descendants from RetirementPlanSponsorLocationAxis taxonomy $US-GAAP returns set (target-name);
$not_allowed_base_member_tree_3 = navigate dimensions dimension-member descendants from RetirementPlanFundingStatusAxis taxonomy $US-GAAP returns set (target-name);
$not_allowed_base_member_tree_4 = navigate dimensions dimension-member descendants from RetirementPlanNameAxis taxonomy $US-GAAP returns set (target-name);

$not_allowed_base_member_trees = $not_allowed_base_member_tree_1 + $not_allowed_base_member_tree_2 + $not_allowed_base_member_tree_3 + $not_allowed_base_member_tree_4;
*/
$not_allowed_base_member_trees = $MEM_NOT_ALLOWED_RET_TREE

$base_members = navigate dimensions dimension-member descendants from DefinedBenefitPlanByPlanAssetCategoriesAxis returns set (target-name);

$unallowed_base_members = $base_members intersect $not_allowed_base_member_trees;

for ($member in $unallowed_base_members)
	$fact1 = {covered @DefinedBenefitPlanByPlanAssetCategoriesAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the DefinedBenefitPlanByPlanAssetCategoriesAxis and the base taxonomy member {$member.local-name}. Members that represent various types of pension plans should not be used on this axis.
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis DefinedBenefitPlanByPlanAssetCategoriesAxis. Members that are children of the axis DefinedBenefitPlansDisclosuresDefinedBenefitPlansAxis represent various types of pension plans should not be used on this axis.";
		true


message
"{$message_for_fact}

Rule Element Id:71
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]


assert US.0001.72 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


$base_members = navigate dimensions dimension-member descendants from AwardDateAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);
$allowed_base_member = $MEM_AWD_DT_AXS;
$unallowed_base_members = $base_members - $allowed_base_member;

for ($member in $unallowed_base_members)
	$fact1 = {covered @AwardDateAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the AwardDateAxis and the base taxonomy member {$member.local-name}. Only extension members should be used with the axis AwardDateAxis.
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis AwardDateAxis. The only members allowed on this axis are extension members defined by the filer. There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:72
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]


assert US.0001.74 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

/** Determine the members on the axis in the taxonomy using the definition linkbase **/

$allowed_members = $MEM_SUB_EVT_AXS;

$member_extension = navigate dimensions dimension-member descendants from SubsequentEventTypeAxis returns set (target-name);

$unallowed_members = $member_extension - $allowed_members;

/** Evaluate if facts exists with the unallowable members **/

for ($member in $unallowed_members)
	$fact1 = {covered @SubsequentEventTypeAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the SubsequentEventTypeAxis and the unallowable member {$member.local-name}. 
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
			true
	else 
			$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis SubsequentEventTypeAxis. The only members allowed on this axis are {$allowed_members.join(', ')}. There are no facts associated with this member and axis.";
			true

message
"{$message_for_fact}

Rule Element Id:74
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]

assert US.0001.75 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


$allowed_base_member_tree = $MBR_STM_EQY_CMP_AXS;

$classes_of_stock_members = $MBR_STM_CLS_STK_AXS;

$allowed_base_member_predefined = set(TrustForBenefitOfEmployeesMember);

$allowed_base_member_2017-12_transition = set(AccumulatedNetGainLossFromCashFlowHedgesIncludingPortionAttributableToNoncontrollingInterestMember, AccumulatedNetGainLossFromDesignatedOrQualifyingCashFlowHedgesMember, AccumulatedNetGainLossFromCashFlowHedgesAttributableToNoncontrollingInterestMember);

$allowed_base_member = ($allowed_base_member_tree + $allowed_base_member_predefined + $allowed_base_member_2017-12_transition);

$base_members = navigate dimensions dimension-member descendants from StatementEquityComponentsAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);

$unallowed_base_members = $base_members - $allowed_base_member;

for ($member in $unallowed_base_members)
	$fact1 = {covered @StatementEquityComponentsAxis = $member};

	$class_stock_message = (
		if $member in $classes_of_stock_members
		"
When using the member " + $member.local-name + " this member should be used on the class of stock axis and not the StatementEquityComponentsAxis. Any facts reported using the member " + $member.local-name + " should have both the StatementClassOfStockAxis and the StatementEquityComponentsAxis axis associated with the fact. The StatementEquityComponentsAxis should use a generic stock type like CommonStockMember, PreferredStockMember etc."
		else
				"");

	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the StatementEquityComponentsAxis and the base taxonomy member {$member.local-name}. Only extension members and the elements defined as children of this axis in the US GAAP taxonomy should be used with the axis StatementEquityComponentsAxis. " + $class_stock_message + "
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis StatementEquityComponentsAxis. The only members allowed on this axis are extension members defined by the filer and the elements defined as children of this axis in the US GAAP taxonomy. There are no facts associated with this member and axis. " + $class_stock_message;
		true


message
"{$message_for_fact}

Rule Element Id:75
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]

assert US.0001.76 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


/** Use nested navigation as the srt:StatementScenarioAxis in the US GAAP taxonomy is not a valid hypercube in all cases so the dimensions will not return all members. Specifically the 190000 group **/
$allowed_base_member = $MBR_STM_SCN_AXS;
	 
$base_members = navigate dimensions dimension-member descendants from srt:StatementScenarioAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);
$unallowed_base_members = $base_members - $allowed_base_member;

for ($member in $unallowed_base_members)
	$fact1 = {covered @srt:StatementScenarioAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the srt:StatementScenarioAxis and the base taxonomy member {$member.local-name}. Only extension members and the elements defined as children of this axis in the US GAAP taxonomy should be used with the axis srt:StatementScenarioAxis.
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis srt:StatementScenarioAxis. The only members allowed on this axis are extension members defined by the filer and the elements defined as children of this axis in the US GAAP taxonomy. There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:76
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]

assert US.0001.77 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


$base_members = navigate dimensions dimension-member descendants from PreferredUnitsByNameAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);
$allowed_base_member = $MBR_PRF_UNT_NM_AXS;
$unallowed_base_members = $base_members - $allowed_base_member;

for ($member in $unallowed_base_members)
	$fact1 = {covered @PreferredUnitsByNameAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the PreferredUnitsByNameAxis and the base taxonomy member {$member.local-name}. Only extension members should be used with the axis PreferredUnitsByNameAxis.
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis PreferredUnitsByNameAxis. The only members allowed on this axis are extension members defined by the filer. There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:77
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]


assert US.0001.78 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


$base_members = navigate dimensions dimension-member descendants from RetirementPlanNameAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);
$allowed_base_member = $MBR_RET_PLN_NM_AXS;
$unallowed_base_members = $base_members - $allowed_base_member;

for ($member in $unallowed_base_members)
	$fact1 = {covered @RetirementPlanNameAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the RetirementPlanNameAxis and the base taxonomy member {$member.local-name}. Only extension members should be used with the axis RetirementPlanNameAxis.
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis RetirementPlanNameAxis. The only members allowed on this axis are extension members defined by the filer. There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:78
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]

assert US.0001.79 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


$base_members = navigate dimensions dimension-member descendants from srt:OwnershipAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);
$allowed_base_member = $MBR_OWNRSHP_AXS;
$exchangeMembers = $EXCHANGE_ELTS.concepts.name;
$unallowed_base_members = $base_members - ($allowed_base_member + $exchangeMembers);

for ($member in $unallowed_base_members)
	$fact1 = {covered @srt:OwnershipAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the OwnershipAxis and the base taxonomy member {$member.local-name}. Only extension members should be used with the axis OwnershipAxis.
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis OwnershipAxis. The only members allowed on this axis are extension members defined by the filer. There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:79
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]

assert US.0001.80 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


$base_members = navigate dimensions dimension-member descendants from srt:MajorCustomersAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);
$allowed_base_member = $MBR_MAJ_CST_AXS;
$unallowed_base_members = $base_members - $allowed_base_member;

for ($member in $unallowed_base_members)
	$fact1 = {covered @srt:MajorCustomersAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the MajorCustomersAxis and the base taxonomy member {$member.local-name}. Only extension members should be used with the axis MajorCustomersAxis.
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis MajorCustomersAxis. The only members allowed on this axis are extension members defined by the filer. There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:80
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]

assert US.0001.9366 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


$base_members = navigate dimensions dimension-member descendants from BusinessAcquisitionAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);
$allowed_base_member = $MBR_BUS_ACQ_AXS;
$unallowed_base_members = $base_members - $allowed_base_member;

for ($member in $unallowed_base_members)
	$fact1 = {covered @BusinessAcquisitionAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the BusinessAcquisitionAxis and the base taxonomy member {$member.local-name}. Only extension members should be used with the axis BusinessAcquisitionAxis and the members {$allowed_base_member.join(', ')}.
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis BusinessAcquisitionAxis. The only members allowed on this axis are extension members defined by the filer and the members {$allowed_base_member.join(', ')}. There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:9366
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]


assert US.0001.81 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else

/** Determine the members on the axis in the taxonomy using the definition linkbase CHANGE TO - dimensions dimension-member **/

$member_USGAAP = $MBR_STM_BIS_SEG_AXS;

$baseMembers = navigate dimensions dimension-member descendants from StatementBusinessSegmentsAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);


/** Difference the sets**/

$unallowed_members = $baseMembers - $member_USGAAP;

/** Evaluate if facts exists with the unallowable members **/
/** We have used covered because if it was not covered then the processor looks for alignmnet. This means that the exist will run and if it does not get a result then the processor will stop processing results. i.e. the non existence of the fact means the iteration does not run and the else statement does not run.
**/
for ($member in $unallowed_members)
	$fact1 = {covered @StatementBusinessSegmentsAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the StatementBusinessSegmentsAxis and the unallowable member {$member.local-name}. The StatementBusinessSegmentsAxis should only be used with extension members and the  following  US-GAAP  members: {$member_USGAAP.join(', ')}.
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is used on the axis StatementBusinessSegmentsAxis. The StatementBusinessSegmentsAxis should only be used with extension members and the  following  US-GAAP  members: {$member_USGAAP.join(', ')}. There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]


assert US.0001.82 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else


$base_members = navigate dimensions dimension-member descendants from AssetAcquisitionAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);
$allowed_base_member = $MBR_AST_ACQ_AXS;
$unallowed_base_members = $base_members - $allowed_base_member;

for ($member in $unallowed_base_members)
	$fact1 = {covered @AssetAcquisitionAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the AssetAcquisitionAxis and the base taxonomy member {$member.local-name}. Only extension members should be used with the axis AssetAcquisitionAxis and the members {$allowed_base_member.join(', ')}.
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis AssetAcquisitionAxis. The only members allowed on this axis are extension members defined by the filer and the members {$allowed_base_member.join(', ')}. There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:9366
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]


assert US.0001.83 satisfied

$rule_id = (rule-name().split('.'))[rule-name().split('.').length];

/** DQCRT RULE **/
if not applicable_form(rule-name())
	skip
else



$base_members = navigate dimensions dimension-member descendants from RetirementPlanSponsorLocationAxis where is_base($relationship.target, $ALL_BASE_TAXONOMIES_ELTS) returns set (target-name);

$allowed_base_member = $MBR_STM_GEO_AXS + set(RetirementPlanSponsorLocationDomain, DomesticPlanMember, ForeignPlanMember);

$unallowed_base_members = $base_members - $allowed_base_member;

$allowed_base_memer_local_name = filter $allowed_base_member returns $item.local-name;

for ($member in $unallowed_base_members)
	$fact1 = {covered @RetirementPlanSponsorLocationAxis = $member};
	if exists($fact1)
		$message_for_fact = "The concept {$fact1.concept.name.local-name} with a value of {$fact1} is dimensionally qualified with the RetirementPlanSponsorLocationAxis and the base taxonomy member {$member.local-name}. Only Geographical location members, DomesticPlanMember, ForeignPlanMember and extension members should be used with the axis RetirementPlanSponsorLocationAxis.
The properties of the fact for {$fact1.concept.name.local-name} are:
Period: {$fact1.period}
Dimensions: {$fact1.dimensions.join(', ','=')} 
Unit: {$fact1.unit}";
		true
	else 
		$message_for_fact = " The member {$member.local-name} is inappropriately used on the axis RetirementPlanSponsorLocationAxis. The only members allowed on this axis are extension members defined by the filer and the following members in the US-GAAP taxonomy {$allowed_base_memer_local_name.join(', ')} . There are no facts associated with this member and axis.";
		true


message
"{$message_for_fact}

Rule Element Id:{$rule_id}
Rule version: {$ruleVersion}"

SEVERITY error

effectiveDate $effective_dates[$rule_id]